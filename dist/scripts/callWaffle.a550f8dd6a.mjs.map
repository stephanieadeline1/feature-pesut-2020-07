{"version":3,"sources":["webpack:///./app/scripts/packs/callWaffle.js","webpack:///./config/modern-polyfills.js"],"names":["containerChart","d3","pesutDeaths","data","resize","html","frameWidth","node","offsetWidth","width","height","$_selector","$_data","$_label","$_cellSize","$_cellGap","$_rows","$_columns","$_rounded","$_keys","$_useWidth","defaults","generatedWaffleChart","_obj","size","rows","columns","undefined","gap","rounded","formattedData","domain","value","length","total","d","forcedWidth","selector","getBoundingClientRect","Math","floor","squareVal","forEach","i","units","Array","join","split","map","push","groupIndex","red","interpolate","range","label","append","attr","text","legendItem","selectAll","enter","legendIcon","style","item","col","row","round","drawWaffleChart","arguments","useWidth","window","addEventListener","_","debounce","require"],"mappings":"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","file":"callWaffle.a550f8dd6a.mjs","sourcesContent":["/* eslint-disable no-unused-vars */\nimport * as d3 from 'd3';\nimport d3Tip from 'd3-tip';\n\n// import * as tip from 'd3-tip';\nimport _ from 'lodash';\n\n// main code for feature graphics\n// a reference to the default graphic container, change if needed\nconst containerChart = d3.select('.waffle-chart');\n\n// a helper function to clear the container of its contents\nconst clearContainer = () => containerChart.html('');\n\n// a helper function to grab the container's width\nconst getFrameWidth = () => containerChart.node().offsetWidth;\n\n// var dataCsv = d3.csv('../../data.csv');\n// console.log(dataCsv);\n\nimport data from '../../../data/data.json';\n// import geodata from '../../../data/mahakam_clipped.json';\n// import geodata_2 from '../../../data/telukbppnew.json';\n// import bppRect from '../../../data/rectbpp.json';\n// import mahakamRect from '../../../data/rectmahakam.json';\nvar pesutDeaths = data['pesutdeaths'];\n\nfunction resize() {\n  clearContainer();\n  const frameWidth = getFrameWidth();\n  var breakPoint = 400;\n  const isMobile = frameWidth < breakPoint;\n\n  var margin = { top: 20, right: 0, bottom: 20, left: 0 };\n  var width = frameWidth - margin.left - margin.right;\n  var height = 350 - margin.top - margin.bottom;\n\n  var WaffleChart = function() {\n    var $_selector,\n      $_data,\n      $_label,\n      $_cellSize,\n      $_cellGap,\n      $_rows,\n      $_columns,\n      $_rounded,\n      $_keys,\n      $_useWidth;\n\n    var defaults = {\n      size: 6,\n      rows: 50,\n      columns: 100,\n      rounded: false,\n      gap: 2,\n    };\n\n    function generatedWaffleChart() {\n      $_keys = d3.keys($_data[0]);\n\n      var obj = {\n        selector: $_selector,\n        data: $_data,\n        label: $_label,\n        size: $_cellSize,\n        gap: $_cellGap,\n        rows: $_rows,\n        columns: $_columns,\n        rounded: $_rounded,\n      };\n\n      drawWaffleChart(obj);\n    }\n\n    function drawWaffleChart(_obj) {\n      if (!_obj.size) {\n        _obj.size = defaults.size;\n      }\n      if (!_obj.rows) {\n        _obj.rows = defaults.rows;\n      }\n      if (!_obj.columns) {\n        _obj.columns = defaults.columns;\n      }\n      if (_obj.gap === undefined) {\n        _obj.gap = defaults.gap;\n      }\n      if (_obj.rounded === undefined) {\n        _obj.columns = defaults.rounded;\n      }\n\n      var formattedData = [];\n      var domain = [];\n      var value = $_keys[$_keys.length - 1];\n      var total = d3.sum(_obj.data, function(d) {\n        return d[value];\n      });\n\n      if ($_useWidth) {\n        var forcedWidth = d3\n          .select(_obj.selector)\n          .node()\n          .getBoundingClientRect().width;\n        _obj.columns = Math.floor(forcedWidth / (_obj.size + _obj.gap));\n      }\n\n      var squareVal = total / (_obj.rows * _obj.columns);\n\n      _obj.data.forEach(function(d, i) {\n        d[value] = +d[value];\n        d.units = Math.floor(d[value] / squareVal);\n        Array(d.units + 1)\n          .join(1)\n          .split('')\n          .map(function() {\n            formattedData.push({\n              squareVal: squareVal,\n              units: d.units,\n              value: d[value],\n              groupIndex: i,\n            });\n          });\n        domain.push(d[$_keys[0]]);\n      });\n\n      var red = '#CE2A23';\n\n      var color = d3\n        .scaleLinear()\n        .domain([1, _obj.data.length - 1])\n        .interpolate(d3.interpolateRgb)\n        .range(['#555', '#EEE']);\n\n      // add label\n\n      if (_obj.label) {\n        d3.select(_obj.selector)\n          .append('div')\n          .attr('class', 'label')\n          .text(_obj.label);\n      }\n\n      // add legend\n\n      var legend = d3\n        .select($_selector)\n        .append('div')\n        .attr('class', 'legend');\n\n      var legendItem = legend.selectAll('div').data(_obj.data);\n\n      legendItem\n        .enter()\n        .append('div')\n        .attr('class', function(d, i) {\n          return 'legend_item legend_item_' + (i + 1);\n        });\n\n      var legendIcon = legendItem\n        .append('div')\n        .attr('class', 'legend_item_icon')\n        .style('background-color', function(d, i) {\n          if (i === 0) {\n            return red;\n          } else if (i === 1) {\n            return red;\n          } else if (i === 2) {\n            return red;\n          } else if (i === 3) {\n            return red;\n          } else if (i === 4) {\n            return red;\n          } else if (i === 5) {\n            return red;\n          } else if (i === 6) {\n            return red;\n          } else if (i === 7) {\n            return red;\n          } else if (i === 8) {\n            return red;\n          }\n        });\n\n      if (_obj.rounded) {\n        legendIcon.style('border-radius', '50%');\n      }\n\n      legendItem\n        .append('span')\n        .attr('class', 'legend_item_text')\n        .text(function(d) {\n          return d[$_keys[0]];\n        });\n\n      // set up the dimensions\n\n      // var width = _obj.size * _obj.columns + _obj.columns * _obj.gap - _obj.gap;\n      // var height = _obj.size * _obj.rows + _obj.rows * _obj.gap - _obj.gap;\n\n      if ($_useWidth) {\n        width = d3\n          .select(_obj.selector)\n          .node()\n          .getBoundingClientRect().width;\n      }\n\n      var svg = d3\n        .select(_obj.selector)\n        .append('svg')\n        .attr('class', 'waffle')\n        .attr('width', width)\n        .attr('height', height);\n\n      var g = svg.append('g').attr('transform', 'translate(0,0)');\n\n      // insert dem items\n\n      var item = g.selectAll('.unit').data(formattedData);\n\n      item\n        .enter()\n        .append('rect')\n        .attr('class', 'unit')\n        .attr('width', _obj.size)\n        .attr('height', _obj.size)\n        .attr('fill', function(d) {\n          if (d.groupIndex === 0) {\n            return '#00A5E3';\n          } else if (d.groupIndex === 1) {\n            return '#ff5c77';\n          } else if (d.groupIndex === 2) {\n            return '#c05780';\n          } else if (d.groupIndex === 3) {\n            return '#00cdac';\n          } else if (d.groupIndex === 4) {\n            return '#fc6238';\n          } else if (d.groupIndex === 5) {\n            return '#8dd7bf';\n          } else if (d.groupIndex === 6) {\n            return '#ffd872';\n          } else if (d.groupIndex === 7) {\n            return '#ff828b';\n          } else if (d.groupIndex === 8) {\n            return '#cccccc';\n          }\n        })\n        .attr('x', function(d, i) {\n          var col = Math.floor(i / _obj.rows);\n          return col * _obj.size + col * _obj.gap;\n        })\n        .attr('y', function(d, i) {\n          var row = i % _obj.rows;\n          return (\n            _obj.rows * (_obj.size + _obj.gap) -\n            (row * _obj.size + row * _obj.gap) -\n            _obj.size -\n            _obj.gap\n          );\n        })\n        .append('title')\n        .text(function(d, i) {\n          return (\n            _obj.data[d.groupIndex][$_keys[0]] +\n            ': ' +\n            Math.round((d.units / formattedData.length) * 100) +\n            '%'\n          );\n        });\n\n      if (_obj.rounded) {\n        item.attr('rx', _obj.size / 2).attr('ry', _obj.size / 2);\n      }\n    }\n\n    generatedWaffleChart.selector = function(value) {\n      if (!arguments.length) {\n        return $_selector;\n      }\n      $_selector = value;\n      return generatedWaffleChart;\n    };\n\n    generatedWaffleChart.data = function(value) {\n      if (!arguments.length) {\n        return $_data;\n      }\n      $_data = value;\n      return generatedWaffleChart;\n    };\n\n    generatedWaffleChart.useWidth = function(value) {\n      if (!arguments.length) {\n        return $_useWidth;\n      }\n      $_useWidth = value;\n      return generatedWaffleChart;\n    };\n\n    generatedWaffleChart.label = function(value) {\n      if (!arguments.length) {\n        return $_label;\n      }\n      $_label = value;\n      return generatedWaffleChart;\n    };\n\n    generatedWaffleChart.size = function(value) {\n      if (!arguments.length) {\n        return $_cellSize;\n      }\n      $_cellSize = value;\n      return generatedWaffleChart;\n    };\n\n    generatedWaffleChart.gap = function(value) {\n      if (!arguments.length) {\n        return $_cellGap;\n      }\n      $_cellGap = value;\n      return generatedWaffleChart;\n    };\n\n    generatedWaffleChart.rows = function(value) {\n      if (!arguments.length) {\n        return $_rows;\n      }\n      $_rows = value;\n      return generatedWaffleChart;\n    };\n\n    generatedWaffleChart.columns = function(value) {\n      if (!arguments.length) {\n        return $_columns;\n      }\n      $_columns = value;\n      return generatedWaffleChart;\n    };\n\n    generatedWaffleChart.rounded = function(value) {\n      if (!arguments.length) {\n        return $_rounded;\n      }\n      $_rounded = value;\n      return generatedWaffleChart;\n    };\n\n    return generatedWaffleChart;\n  };\n\n  var waffle = new WaffleChart()\n    .selector('.waffle-chart')\n    .data(pesutDeaths)\n    .useWidth(false)\n    .label(\"Value of producers' sales in 2013, in thousands of dollars\")\n    .size(10)\n    .gap(2)\n    .rows(20)\n    .columns(50)\n    .rounded(true)();\n}\n\n// call resize on load\n\nresize();\nwindow.addEventListener('resize', _.debounce(resize, 200));\n","'use strict';\n\n// We depend on intersection-observer enough that it should just be assumed as necessary\nrequire('intersection-observer');\n"],"sourceRoot":""}