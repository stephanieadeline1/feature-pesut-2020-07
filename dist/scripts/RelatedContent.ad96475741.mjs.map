{"version":3,"sources":["webpack:///../src/apmonth.js","webpack:///../src/apdate.js","webpack:///../src/utils.js","webpack:///../src/pluralize.js","webpack:///../src/widont.js","webpack:///./node_modules/@babel/runtime/helpers/esm/extends.js","webpack:///./app/scripts/components/Story.js","webpack:///./app/scripts/components/RelatedContent.js","webpack:///./app/scripts/utils/feeds.js"],"names":["AP_MONTHS","0","1","2","3","4","5","6","7","8","9","10","11","apmonth","date","Date","getMonth","apdate","getDate","getFullYear","isNil","value","singularSuffix","widontRegex","RegExp","widont","val","replaceChar","String","replace","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","Story","headline","url","pub_date","sitewide_image","class","href","ga-event-category","ga-event-action","ga-event-label","src","thumbnails","letterbox","alt","description","RelatedContent","Component","constructor","super","state","stories","componentDidMount","gutenTag","numberOfStories","props","fetch","BUILD_RELATED_CONTENT_URL","then","res","json","results","setState","render","title","map","story","id","defaultProps","TRENDING_STORIES_URL"],"mappings":"qKAOaA,EAAY,CACvBC,EAAG,OACHC,EAAG,OACHC,EAAG,QACHC,EAAG,QACHC,EAAG,MACHC,EAAG,OACHC,EAAG,OACHC,EAAG,OACHC,EAAG,QACHC,EAAG,OACHC,GAAI,OACJC,GAAI,iBAsBkBC,EAAQC,GAC9B,gBAD8BA,MAAO,IAAIC,MAClCf,EAAUc,EAAKE,qBCrBAC,EAAOH,GAK7B,gBAL6BA,MAAO,IAAIC,MAC1BF,EAAQC,OACHA,EAAKI,eACXJ,EAAKK,uBCjBJC,EAAMC,GACpB,OAAgB,MAATA,EC0CAC,ICjCHC,EAAc,IAAIC,OAAO,mBAqB/B,SAAwBC,EAAOC,EAAKC,GAElC,gBAFkCA,MA7BhB,KA+BdP,EAAMM,GAAa,GAGXE,OAAOF,GAERG,QAAQN,EAAgBI,U,kCC7CtB,SAASG,IAetB,OAdAA,EAAWC,OAAOC,QAAU,SAAUC,GACpC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAASF,UAAUD,GAEvB,IAAK,IAAII,KAAOD,EACVN,OAAOQ,UAAUC,eAAeC,KAAKJ,EAAQC,KAC/CL,EAAOK,GAAOD,EAAOC,IAK3B,OAAOL,IAGOS,MAAMC,KAAMR,W,mCCkBfS,EA9BA,IAAgD,IAAhD,SAAEC,EAAF,IAAYC,EAAZ,SAAiBC,EAAjB,eAA2BC,GAAqB,EAC7D,OACE,uBAASC,MAAM,SACb,iBACEA,MAAM,iBACNC,KAAMJ,EACNb,OAAO,SACPkB,oBAAkB,YAClBC,kBAAgB,mBAChBC,iBAAe,aAEf,mBAAKJ,MAAM,eACT,mBAAKA,MAAM,aACT,mBACEK,IAAKN,EAAeO,WAAWC,UAC/BC,IAAKT,EAAeU,eAGxB,mBAAKT,MAAM,cACT,sBAAQA,MAAM,gBACZ,kBAAIA,MAAM,kBAAkBJ,GAC5B,iBAAGI,MAAM,gBAAgBhC,YAAO,IAAIF,KAAKgC,W,YClBvD,MAAMY,UAAuBC,IAC3BC,cACEC,QAEAnB,KAAKoB,MAAQ,CACXC,QAAS,IAIbC,oBACE,IAAM,SAAEC,EAAF,gBAAYC,GAAoBxB,KAAKyB,MAE3CC,MAAMC,YAA0B,CAAEJ,WAAUC,qBACzCI,KAAKC,GAAOA,EAAIC,QAChBF,KAAM,IAAD,IAAGG,QAASV,GAAZ,SAA0BrB,KAAKgC,SAAS,CAAEX,cAGpDY,OAAO,EAAD,GAAyB,IAAxB,MAAEC,GAAsB,GAAb,QAAEb,GAAW,EAC7B,OACE,uBAASf,MAAM,mBACb,iBAAGA,MAAM,0BAA0B4B,GACnC,mBAAK5B,MAAM,WACRe,EAAQc,IAAIC,GACX,YAAC,EAAD,GAAOzC,IAAKyC,EAAMC,IAAQD,QAQtCpB,EAAesB,aAAe,CAC5Bd,gBAAiB,EACjBU,MAAO,aAGMlB,a,kCC1Cf,wEAAMuB,EACJ,gFACIZ,EAA6B,IAAD,IAAC,SAAEJ,EAAF,gBAAYC,EAAkB,GAA/B,2GAC4DD,EAD5D,8FAC0JC,EAD1J","file":"RelatedContent.ad96475741.mjs","sourcesContent":["/**\n * Map of AP month abbreviations. Note that they are zero-indexed due to\n * JavaScript's life choices. Exported for testing purposes.\n *\n * @private\n * @type {object}\n */\nexport const AP_MONTHS = {\n  0: 'Jan.',\n  1: 'Feb.',\n  2: 'March',\n  3: 'April',\n  4: 'May',\n  5: 'June',\n  6: 'July',\n  7: 'Aug.',\n  8: 'Sept.',\n  9: 'Oct.',\n  10: 'Nov.',\n  11: 'Dec.',\n};\n\n/**\n * Returns an AP-formatted month string that corresponds with the supplied\n * Date. If an `input` is not passed, it will use the result of `new Date();`.\n *\n * @param  {Date} [date] JavaScript Date object, defaults to current date if\n *                       not passed\n * @return {string}\n * @example\n *\n * var journalize = require('journalize');\n *\n * // Remember that JavaScript zero-indexes months!\n * journalize.apmonth(new Date(2016, 10, 8));\n * // returns 'Nov.'\n *\n * // Uses the current date if no parameter is passed\n * journalize.apmonth();\n * // returns 'July' (pretend it is actually July)\n */\nexport default function apmonth(date = new Date()) {\n  return AP_MONTHS[date.getMonth()];\n}\n","import apmonth from './apmonth';\n\n/**\n * Returns an AP-formatted date string that corresponds with the supplied\n * Date. If an `input` is not passed, it will use the result of `new Date();`.\n *\n * @param  {Date} [date] JavaScript Date object, defaults to current date if\n *                       not passed\n * @return {string}\n * @example\n *\n * var journalize = require('journalize');\n *\n * // Remember that JavaScript zero-indexes months!\n * journalize.apdate(new Date(2016, 10, 8));\n * // returns 'Nov. 8, 2016'\n *\n * // Uses the current date if no parameter is passed\n * journalize.apdate();\n * // returns 'July 4, 2016' (pretend it is actually July 4, 2016)\n */\nexport default function apdate(date = new Date()) {\n  const month = apmonth(date);\n  const dayOfMonth = date.getDate();\n  const year = date.getFullYear();\n\n  return `${month} ${dayOfMonth}, ${year}`;\n}\n","/**\n * Returns true if `value` is null or undefined;\n *\n * @private\n * @param  {*}  value\n * @return {boolean}\n */\nexport function isNil(value) {\n  return value == null;\n}\n\n/**\n * Returns true if `value` is a finite number.\n *\n * Based on: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isFinite\n *\n * @private\n * @param  {*}  value\n * @return {boolean}\n */\nexport function _isFinite(value) {\n  return typeof value === 'number' && isFinite(value);\n}\n\n/**\n * Returns true if `value` is an integer.\n *\n * Based on: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\n *\n * @private\n * @param  {*}  value\n * @return {boolean}\n */\nexport function isInteger(value) {\n  return _isFinite(value) && Math.floor(value) === value;\n}\n","/**\n * Returns a plural suffix if the value is not 1. By default, `pluralize`\n * uses \"s\" as the suffix. If a `String` is provided, `pluralize` will attempt\n * to convert it into a `Number`. If an `Array` is provided instead of a\n * number, the length of the `Array` is used to determine the suffix. An\n * alternative plural suffix can be provided as the second parameter, and if\n * necessary, an alternative singular suffix can be provided as the third.\n *\n * @param {number|string|array} value\n * @param {string} [pluralSuffix='s']\n * @param {string} [singularSuffix='']\n * @return {string}\n * @example\n *\n * var journalize = require('journalize');\n *\n * // typical usage\n * 'vote' + journalize.pluralize(0); // votes\n * 'vote' + journalize.pluralize(1); // vote\n * 'vote' + journalize.pluralize(2); // votes\n *\n * // the plural suffix may be changed\n * 'class' + journalize.pluralize(0, 'es'); // classes\n * 'class' + journalize.pluralize(1, 'es'); // class\n * 'class' + journalize.pluralize(2, 'es'); // classes\n *\n * // some words also need a custom singular suffix\n * 'cand' + journalize.pluralize(0, 'ies', 'y'); // candies\n * 'cand' + journalize.pluralize(1, 'ies', 'y'); // candy\n * 'cand' + journalize.pluralize(2, 'ies', 'y'); // candies\n */\nexport default function pluralize(\n  value,\n  pluralSuffix = 's',\n  singularSuffix = ''\n) {\n  // if this is an array, base the return value on the length\n  if (Array.isArray(value)) {\n    if (value.length !== 1) {\n      return pluralSuffix;\n    } else {\n      return singularSuffix;\n    }\n  }\n\n  // otherwise we have a string or number - convert it and test if its 1\n  if (Number(value) !== 1) {\n    return pluralSuffix;\n  }\n\n  return singularSuffix;\n}\n","import { isNil } from './utils';\n\n/**\n * The non-breaking space character added to the string passed to widont.\n * Exported for testing purposes.\n *\n * @private\n * @type {string}\n */\nexport const nbsp = '\\xA0';\n\n/**\n * The regular expression to find the final space in a string for widont.\n *\n * @private\n * @type {RegExp}\n */\nconst widontRegex = new RegExp(/\\s+([^\\s]*)\\s*$/);\n\n/**\n * Prevents \"widows\" - a word by itself on a line - from appearing in strings\n * by replacing the space between the last two words with a non-breaking space\n * character.\n *\n * @param {string} val\n * @param {string} [replaceChar='\\xA0'] The character to replace the space with\n * @returns {string}\n * @example\n *\n * var journalize = require('journalize');\n *\n * journalize.widont('this is a string');\n * // returns 'this is a&nbsp;string'\n *\n * journalize.widont('this is a string', 'HELLO');\n * // returns 'this is aHELLOstring'\n *\n */\nexport default function widont(val, replaceChar = nbsp) {\n  // if `val` is undefined or null, return an empty string\n  if (isNil(val)) return '';\n\n  // coerce value to a String\n  const str = String(val);\n\n  return str.replace(widontRegex, `${replaceChar}$1`);\n}\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","import { h } from 'preact';\nimport { apdate } from 'journalize';\n\nconst Story = ({ headline, url, pub_date, sitewide_image }) => {\n  return (\n    <article class=\"story\">\n      <a\n        class=\"story-link dim\"\n        href={url}\n        target=\"_blank\"\n        ga-event-category=\"read more\"\n        ga-event-action=\"automated by tag\"\n        ga-event-label=\"apps page\"\n      >\n        <div class=\"story-media\">\n          <div class=\"story-art\">\n            <img\n              src={sitewide_image.thumbnails.letterbox}\n              alt={sitewide_image.description}\n            />\n          </div>\n          <div class=\"story-text\">\n            <header class=\"story-header\">\n              <h4 class=\"story-headline\">{headline}</h4>\n              <p class=\"story-byline\">{apdate(new Date(pub_date))}</p>\n            </header>\n          </div>\n        </div>\n      </a>\n    </article>\n  );\n};\n\nexport default Story;\n","import { Component, h } from 'preact';\n\nimport Story from './Story';\n\nimport { BUILD_RELATED_CONTENT_URL } from '../utils/feeds';\n\nclass RelatedContent extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      stories: [],\n    };\n  }\n\n  componentDidMount() {\n    const { gutenTag, numberOfStories } = this.props;\n\n    fetch(BUILD_RELATED_CONTENT_URL({ gutenTag, numberOfStories }))\n      .then(res => res.json())\n      .then(({ results: stories }) => this.setState({ stories }));\n  }\n\n  render({ title }, { stories }) {\n    return (\n      <section class=\"related-stories\">\n        <p class=\"related-content__title\">{title}</p>\n        <nav class=\"stories\">\n          {stories.map(story => (\n            <Story key={story.id} {...story} />\n          ))}\n        </nav>\n      </section>\n    );\n  }\n}\n\nRelatedContent.defaultProps = {\n  numberOfStories: 4,\n  title: 'Read more',\n};\n\nexport default RelatedContent;\n","const TRENDING_STORIES_URL =\n  'https://www.texastribune.org/api/v2/articles/most_viewed/?format=json&limit=5';\nconst BUILD_RELATED_CONTENT_URL = ({ gutenTag, numberOfStories = 4 }) =>\n  `https://www.texastribune.org/api/v2/articles/?content_type=story,audio,video,pointer&tag=${gutenTag}&tag!=object-tribcast&fields=id,url,pub_date,headline,summary,sitewide_image&limit=${numberOfStories}&format=json`;\n\nexport { BUILD_RELATED_CONTENT_URL, TRENDING_STORIES_URL };\n"],"sourceRoot":""}