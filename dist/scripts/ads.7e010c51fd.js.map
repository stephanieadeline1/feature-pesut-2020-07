{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/esm/classCallCheck.js","webpack:///./node_modules/@babel/runtime/helpers/esm/createClass.js","webpack:///./app/scripts/utils/load-script.js","webpack:///./app/scripts/utils/select-all.js","webpack:///./app/scripts/utils/unique-id.js","webpack:///./app/scripts/utils/ad-loader.js","webpack:///./app/scripts/utils/get-matching-attributes.js","webpack:///./app/scripts/utils/get-attributes.js","webpack:///./app/scripts/utils/camel-case.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","loadScript","url","Promise","resolve","reject","script","document","createElement","src","async","onload","onerror","body","appendChild","selectAll","el","context","Node","Window","Array","slice","call","querySelectorAll","idCounter","AdLoader","adFields","adUnit","dimensions","globalMappings","banner","attributePrefix","gptSrc","idPrefix","selector","targetingKey","targetingValue","this","initialized","slots","createAds","bind","onIntersection","setupService","elements","count","observer","IntersectionObserver","rootMargin","threshold","window","googletag","cmd","then","push","pubads","setTargeting","disableInitialLoad","enableServices","forEach","element","prefix","id","matchingAttributes","attributes","attrs","nodeType","map","name","value","getAttributes","fields","keys","substr","field","replace","match","p1","toUpperCase","getMatchingAttributes","options","assign","adElementId","setAttribute","gptAdUnit","defineSlot","defineSizeMapping","setCollapseEmptyDiv","addService","display","__slot__","observe","entries","entry","isIntersecting","unobserve","refresh","disconnect"],"mappings":"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","file":"ads.7e010c51fd.js","sourcesContent":["export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","/**\n * A helper for asynchronously loading scripts.\n *\n * Provides a Promise interface for passing a function that will only be called\n * if the script is successfully added to the page.\n *\n * @private\n * @param {String} url The URL for the script to be loaded.\n * @returns {Promise}\n * @example\n *\n * loadScript('backup.js').then(() => {\n *   // anything that depends on that script loading\n * });\n */\nfunction loadScript(url) {\n  return new Promise((resolve, reject) => {\n    // create the `script` element\n    const script = document.createElement('script');\n\n    // set its URL\n    script.src = url;\n\n    // should always be async\n    script.async = true;\n\n    // resolve the Promise on load\n    script.onload = resolve;\n\n    // reject the Promise if there is an error\n    script.onerror = reject;\n\n    // attach the script to the document body\n    document.body.appendChild(script);\n  });\n}\n\nexport default loadScript;\n","/* global Node, Window */\n\n/**\n * Select all matching elements on the page. Uses `document.querySelectorAll`.\n *\n * @param {String} el The CSS selector to search for.\n * @param {Element} [context] The container to search within. Defaults to\n * `document`.\n * @returns {Element[]}\n */\nfunction selectAll(el, context) {\n  // if `el` is a Node or Window, return it in an Array\n  if (el instanceof Node || el instanceof Window) return [el];\n\n  return Array.prototype.slice.call(\n    typeof el === 'string'\n      ? (context || document).querySelectorAll(el)\n      : el || []\n  );\n}\n\nexport default selectAll;\n","/**\n * Counter used by {uniqueId} to iterate.\n * @private\n * @type {Number}\n */\nlet idCounter = 0;\n\n/**\n * Generates identifiers unique to a single browser session. Each time it runs,\n * the integer at the end of the return value will increment.\n *\n * Borrowed from underscore.js: http://underscorejs.org/#uniqueId\n *\n * @param  {String} [prefix] Optional prefix for identifier\n * @return {String}\n * @example\n *\n * var identifier = uniqueId();\n * // returns '1'\n *\n * var prefixedIdentifier = uniqueId('label-');\n * // returns 'label-2'\n */\nexport default function uniqueId(prefix) {\n  const id = ++idCounter + '';\n  return prefix ? prefix + id : id;\n}\n","import getMatchingAttributes from './get-matching-attributes';\nimport loadScript from './load-script';\nimport selectAll from './select-all';\nimport uniqueId from './unique-id';\n\nclass AdLoader {\n  constructor({\n    adFields = { adUnit: '/5805113/basic', dimensions: [300, 250] },\n    globalMappings = {\n      banner: [[[768, 130], [[728, 90]]]],\n    },\n    attributePrefix = 'dv-gpt-',\n    gptSrc = 'https://www.googletagservices.com/tag/js/gpt.js',\n    idPrefix = 'dv-gpt-',\n    selector = '.dv-gpt-ad',\n    targetingKey = 'tribpedia',\n    targetingValue,\n  } = {}) {\n    this.adFields = adFields;\n    this.globalMappings = globalMappings;\n    this.attributePrefix = attributePrefix;\n    this.gptSrc = gptSrc;\n    this.idPrefix = idPrefix;\n    this.selector = selector;\n    this.targetingKey = targetingKey;\n    this.targetingValue = targetingValue;\n\n    this.initialized = false;\n    this.slots = null;\n\n    this.createAds = this.createAds.bind(this);\n    this.onIntersection = this.onIntersection.bind(this);\n    this.setupService = this.setupService.bind(this);\n  }\n\n  init() {\n    if (this.initialized) return;\n\n    this.elements = selectAll(this.selector);\n    this.count = this.elements.length;\n\n    const config = {\n      rootMargin: '500px 0px',\n      threshold: 0.01,\n    };\n\n    this.observer = new IntersectionObserver(this.onIntersection, config);\n\n    window.googletag = window.googletag || {};\n    window.googletag.cmd = window.googletag.cmd || [];\n\n    loadScript(this.gptSrc).then(() => {\n      window.googletag.cmd.push(this.setupService, this.createAds);\n\n      this.initialized = true;\n    });\n  }\n\n  setupService() {\n    window.googletag.cmd.push(() => {\n      const pubads = window.googletag.pubads();\n\n      if (this.targetingKey && this.targetingValue) {\n        pubads.setTargeting(this.targetingKey, this.targetingValue);\n      }\n\n      pubads.disableInitialLoad();\n      window.googletag.enableServices();\n    });\n  }\n\n  createAds() {\n    const { adUnit, dimensions } = this.adFields;\n    const { banner } = this.globalMappings;\n\n    this.elements.forEach(element => {\n      const matchingAttributes = getMatchingAttributes(\n        element,\n        this.attributePrefix\n      );\n\n      const options = Object.assign(\n        {},\n        { adUnit, dimensions },\n        matchingAttributes\n      );\n\n      const adElementId = uniqueId(this.idPrefix);\n      element.setAttribute('id', adElementId);\n\n      const gptAdUnit = window.googletag.defineSlot(\n        options.adUnit,\n        options.dimensions,\n        adElementId\n      );\n\n      gptAdUnit.defineSizeMapping(banner);\n\n      if (options.targetingKey && options.targetingValue) {\n        gptAdUnit.setTargeting(options.targetingKey, options.targetingValue);\n      }\n\n      gptAdUnit.setCollapseEmptyDiv(true);\n      gptAdUnit.addService(window.googletag.pubads());\n\n      window.googletag.display(adElementId);\n      element.__slot__ = gptAdUnit;\n\n      this.observer.observe(element);\n    });\n  }\n\n  onIntersection(entries) {\n    entries.forEach(entry => {\n      if (!entry.isIntersecting) return;\n\n      const element = entry.target;\n\n      this.count -= 1;\n      this.observer.unobserve(element);\n      window.googletag.pubads().refresh([element.__slot__]);\n\n      if (this.count > 0) return;\n\n      this.observer.disconnect();\n    });\n  }\n}\n\nexport default AdLoader;\n","import camelCase from './camel-case';\nimport getAttributes from './get-attributes';\n\n/**\n * Searches an element's attributes and returns an Object of all the ones that\n * begin with a specified prefix. Each matching attribute name is returned\n * without the prefix, with the remainder converted to camelCase.\n *\n * @param  {Element} element\n * @param  {String} prefix\n * @return {Object}\n */\nexport default function getMatchingAttributes(element, prefix) {\n  // get all the attributes on the element\n  const attributes = getAttributes(element);\n  const fields = {};\n\n  // loop through the keys of the attributes\n  Object.keys(attributes).forEach(function(key) {\n    // continue if the key begins with supplied prefix\n    if (key.substr(0, prefix.length) === prefix) {\n      // grab the value associated with the original key\n      const value = attributes[key];\n\n      // slice off the prefix and camelCase what is left\n      const field = camelCase(key.slice(prefix.length));\n\n      fields[field] = value;\n    }\n  });\n\n  return fields;\n}\n","/**\n * Gets all the attributes set on an element, and returns them as an Object.\n *\n * @param  {Element} element\n * @return {Object}\n */\nexport default function getAttributes(element) {\n  const attrs = {};\n\n  // if element is empty, or not ELEMENT_NODE, eject\n  if (!element || element.nodeType !== 1) return attrs;\n\n  // grab all the attributes off the element\n  const map = element.attributes;\n\n  // if there are no attributes, eject\n  if (map.length === 0) return attrs;\n\n  // loop through the attributes and build the object\n  for (var i = 0; i < map.length; i++) {\n    attrs[map[i].name] = map[i].value;\n  }\n\n  return attrs;\n}\n","/**\n * Converts a string from dash or underscore separated to camelCase.\n *\n * @param  {String} str\n * @return {String}\n */\nexport default function camelCase(str) {\n  // remove any dashes or underscores in the string, and grab the following character\n  return str.replace(/[-_]+(\\w?)/g, (match, p1) => {\n    // uppercase the following letter\n    return p1.toUpperCase();\n  });\n}\n"],"sourceRoot":""}