{"version":3,"sources":["webpack:///./node_modules/scrollama/build/scrollama.js","webpack:///../src/vnode.js","webpack:///../src/options.js","webpack:///../src/h.js","webpack:///../src/util.js","webpack:///../src/constants.js","webpack:///../src/render-queue.js","webpack:///../src/vdom/index.js","webpack:///../src/dom/index.js","webpack:///../src/vdom/diff.js","webpack:///../src/vdom/component.js","webpack:///../src/vdom/component-recycler.js","webpack:///../src/component.js"],"names":["module","exports","getOffsetId","id","setup","ref","offsetVal","stepClass","el","document","createElement","className","style","position","left","width","height","borderTop","zIndex","p","innerHTML","fontSize","fontFamily","color","margin","padding","appendChild","body","setupOffset","stepEl","notifyStep","index","state","prefix","elA","getElementById","elB","display","OBSERVER_NAMES","cb","io","stepOffsetHeight","stepOffsetTop","stepStates","offsetMargin","viewH","pageH","previousYOffset","progressThreshold","isReady","isEnabled","isDebug","progressMode","preserveOrder","triggerOnce","direction","format","exclude","err","msg","console","error","reset","stepEnter","stepExit","stepProgress","getOffsetTop","getBoundingClientRect","top","window","pageYOffset","clientTop","getIndex","element","getAttribute","updateDirection","disconnectObserver","name","forEach","d","disconnect","handleResize","html","innerHeight","documentElement","Math","max","scrollHeight","offsetHeight","clientHeight","map","updateIO","post","idVal","querySelector","innerText","update","handleEnable","enable","notifyStepProgress","progress","undefined","resp","notifyOthers","location","i","ss","notifyStepEnter","notifyStepExit","i$1","length","ss$1","dir","check","intersectStepAbove","entry","isIntersecting","boundingClientRect","target","bottom","topAdjusted","bottomAdjusted","intersectStepBelow","intersectViewportAbove","intersectViewportBelow","intersectStepProgress","intersectionRatio","updateStepProgressIO","rootMargin","threshold","count","ceil","t","ratio","push","createThreshold","obs","IntersectionObserver","observe","viewportAbove","marginTop","marginBottom","viewportBelow","stepAbove","stepBelow","anyScrollableParent","nodeType","getComputedStyle","overflowY","isYScrollable","parentNode","S","step","offset","debug","order","a","l","selector","parent","once","Date","now","floor","random","join","Array","from","querySelectorAll","Element","NodeList","scrollableParent","reduce","foundScrollable","s","offsetTrigger","setAttribute","x","min","indexOf","v","replace","isNaN","f","factory","VNode","options","stack","EMPTY_CHILDREN","h","nodeName","attributes","children","arguments","child","simple","String","extend","obj","props","applyRef","value","defer","Promise","SYNC_RENDER","IS_NON_DIMENSIONAL","items","isSameNodeType","node","_componentConstructor","isNamedNode","normalizedNodeName","createElementNS","removeNode","old","useCapture","_listeners","ns","mounts","diffLevel","hydrating","flushMounts","c","ret","dom","prevSvgMode","vnode","previousProps","component","_renderCallbacks","isChild","originalComponent","oldDom","isOwner","createComponent","ATTR_KEY","out","buildComponentFromVNode","vnodeName","firstChild","nodeValue","vchildren","len","originalChildren","childrenLen","vlen","j","vchild","key","keyedLen","keyed","next","previousSibling","attrs","unmountOnly","recyclerComponents","Ctor","nextBase","setComponentProps","componentWillReceiveProps","context","prevContext","_disable","renderMode","syncComponentUpdates","isUpdate","initialBase","snapshot","rendered","inst","cbase","FORCE_RENDER","prevProps","childComponent","base","childProps","initialChildComponent","diff","baseParent","replaceChild","_component","toUnmount","componentRef","beforeUnmount","callback","this"],"mappings":"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","file":"20.146a997785.mjs","sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.scrollama = factory());\n}(this, (function () { 'use strict';\n\n// DOM helper functions\n\n// public\nfunction selectAll(selector, parent) {\n  if ( parent === void 0 ) parent = document;\n\n  if (typeof selector === 'string') {\n    return Array.from(parent.querySelectorAll(selector));\n  } else if (selector instanceof Element) {\n    return [selector];\n  } else if (selector instanceof NodeList) {\n    return Array.from(selector);\n  } else if (selector instanceof Array) {\n    return selector;\n  }\n  return [];\n}\n\nfunction getOffsetId(id) {\n  return (\"scrollama__debug-offset--\" + id);\n}\n\n// SETUP\nfunction setupOffset(ref) {\n  var id = ref.id;\n  var offsetVal = ref.offsetVal;\n  var stepClass = ref.stepClass;\n\n  var el = document.createElement(\"div\");\n  el.id = getOffsetId(id);\n  el.className = \"scrollama__debug-offset\";\n  el.style.position = \"fixed\";\n  el.style.left = \"0\";\n  el.style.width = \"100%\";\n  el.style.height = \"0\";\n  el.style.borderTop = \"2px dashed black\";\n  el.style.zIndex = \"9999\";\n\n  var p = document.createElement(\"p\");\n  p.innerHTML = \"\\\".\" + stepClass + \"\\\" trigger: <span>\" + offsetVal + \"</span>\";\n  p.style.fontSize = \"12px\";\n  p.style.fontFamily = \"monospace\";\n  p.style.color = \"black\";\n  p.style.margin = \"0\";\n  p.style.padding = \"6px\";\n  el.appendChild(p);\n  document.body.appendChild(el);\n}\n\nfunction setup(ref) {\n  var id = ref.id;\n  var offsetVal = ref.offsetVal;\n  var stepEl = ref.stepEl;\n\n  var stepClass = stepEl[0].className;\n  setupOffset({ id: id, offsetVal: offsetVal, stepClass: stepClass });\n}\n\n// UPDATE\nfunction update(ref) {\n  var id = ref.id;\n  var offsetMargin = ref.offsetMargin;\n  var offsetVal = ref.offsetVal;\n  var format = ref.format;\n\n  var post = format === \"pixels\" ? \"px\" : \"\";\n  var idVal = getOffsetId(id);\n  var el = document.getElementById(idVal);\n  el.style.top = offsetMargin + \"px\";\n  el.querySelector(\"span\").innerText = \"\" + offsetVal + post;\n}\n\nfunction notifyStep(ref) {\n  var id = ref.id;\n  var index = ref.index;\n  var state = ref.state;\n\n  var prefix = \"scrollama__debug-step--\" + id + \"-\" + index;\n  var elA = document.getElementById((prefix + \"_above\"));\n  var elB = document.getElementById((prefix + \"_below\"));\n  var display = state === \"enter\" ? \"block\" : \"none\";\n\n  if (elA) { elA.style.display = display; }\n  if (elB) { elB.style.display = display; }\n}\n\nfunction scrollama() {\n  var OBSERVER_NAMES = [\n    \"stepAbove\",\n    \"stepBelow\",\n    \"stepProgress\",\n    \"viewportAbove\",\n    \"viewportBelow\"\n  ];\n\n  var cb = {};\n  var io = {};\n\n  var id = null;\n  var stepEl = [];\n  var stepOffsetHeight = [];\n  var stepOffsetTop = [];\n  var stepStates = [];\n\n  var offsetVal = 0;\n  var offsetMargin = 0;\n  var viewH = 0;\n  var pageH = 0;\n  var previousYOffset = 0;\n  var progressThreshold = 0;\n\n  var isReady = false;\n  var isEnabled = false;\n  var isDebug = false;\n\n  var progressMode = false;\n  var preserveOrder = false;\n  var triggerOnce = false;\n\n  var direction = \"down\";\n  var format = \"percent\";\n\n  var exclude = [];\n\n  /* HELPERS */\n  function err(msg) {\n    console.error((\"scrollama error: \" + msg));\n  }\n\n  function reset() {\n    cb = {\n      stepEnter: function () {},\n      stepExit: function () {},\n      stepProgress: function () {}\n    };\n    io = {};\n  }\n\n  function generateInstanceID() {\n    var a = \"abcdefghijklmnopqrstuv\";\n    var l = a.length;\n    var t = Date.now();\n    var r = [0, 0, 0].map(function (d) { return a[Math.floor(Math.random() * l)]; }).join(\"\");\n    return (\"\" + r + t);\n  }\n\n  function getOffsetTop(el) {\n    var ref = el.getBoundingClientRect();\n    var top = ref.top;\n    var scrollTop = window.pageYOffset;\n    var clientTop = document.body.clientTop || 0;\n    return top + scrollTop - clientTop;\n  }\n\n  function getPageHeight() {\n    var body = document.body;\n    var html = document.documentElement;\n\n    return Math.max(\n      body.scrollHeight,\n      body.offsetHeight,\n      html.clientHeight,\n      html.scrollHeight,\n      html.offsetHeight\n    );\n  }\n\n  function getIndex(element) {\n    return +element.getAttribute(\"data-scrollama-index\");\n  }\n\n  function updateDirection() {\n    if (window.pageYOffset > previousYOffset) { direction = \"down\"; }\n    else if (window.pageYOffset < previousYOffset) { direction = \"up\"; }\n    previousYOffset = window.pageYOffset;\n  }\n\n  function disconnectObserver(name) {\n    if (io[name]) { io[name].forEach(function (d) { return d.disconnect(); }); }\n  }\n\n  function handleResize() {\n    viewH = window.innerHeight;\n    pageH = getPageHeight();\n\n    var mult = format === \"pixels\" ? 1 : viewH;\n    offsetMargin = offsetVal * mult;\n\n    if (isReady) {\n      stepOffsetHeight = stepEl.map(function (el) { return el.getBoundingClientRect().height; });\n      stepOffsetTop = stepEl.map(getOffsetTop);\n      if (isEnabled) { updateIO(); }\n    }\n\n    if (isDebug) { update({ id: id, offsetMargin: offsetMargin, offsetVal: offsetVal, format: format }); }\n  }\n\n  function handleEnable(enable) {\n    if (enable && !isEnabled) {\n      // enable a disabled scroller\n      if (isReady) {\n        // enable a ready scroller\n        updateIO();\n      } else {\n        // can't enable an unready scroller\n        err(\"scrollama error: enable() called before scroller was ready\");\n        isEnabled = false;\n        return; // all is not well, don't set the requested state\n      }\n    }\n    if (!enable && isEnabled) {\n      // disable an enabled scroller\n      OBSERVER_NAMES.forEach(disconnectObserver);\n    }\n    isEnabled = enable; // all is well, set requested state\n  }\n\n  function createThreshold(height) {\n    var count = Math.ceil(height / progressThreshold);\n    var t = [];\n    var ratio = 1 / count;\n    for (var i = 0; i < count; i += 1) {\n      t.push(i * ratio);\n    }\n    return t;\n  }\n\n  /* NOTIFY CALLBACKS */\n  function notifyStepProgress(element, progress) {\n    var index = getIndex(element);\n    if (progress !== undefined) { stepStates[index].progress = progress; }\n    var resp = { element: element, index: index, progress: stepStates[index].progress };\n\n    if (stepStates[index].state === \"enter\") { cb.stepProgress(resp); }\n  }\n\n  function notifyOthers(index, location) {\n    if (location === \"above\") {\n      // check if steps above/below were skipped and should be notified first\n      for (var i = 0; i < index; i += 1) {\n        var ss = stepStates[i];\n        if (ss.state !== \"enter\" && ss.direction !== \"down\") {\n          notifyStepEnter(stepEl[i], \"down\", false);\n          notifyStepExit(stepEl[i], \"down\");\n        } else if (ss.state === \"enter\") { notifyStepExit(stepEl[i], \"down\"); }\n        // else if (ss.direction === 'up') {\n        //   notifyStepEnter(stepEl[i], 'down', false);\n        //   notifyStepExit(stepEl[i], 'down');\n        // }\n      }\n    } else if (location === \"below\") {\n      for (var i$1 = stepStates.length - 1; i$1 > index; i$1 -= 1) {\n        var ss$1 = stepStates[i$1];\n        if (ss$1.state === \"enter\") {\n          notifyStepExit(stepEl[i$1], \"up\");\n        }\n        if (ss$1.direction === \"down\") {\n          notifyStepEnter(stepEl[i$1], \"up\", false);\n          notifyStepExit(stepEl[i$1], \"up\");\n        }\n      }\n    }\n  }\n\n  function notifyStepEnter(element, dir, check) {\n    if ( check === void 0 ) check = true;\n\n    var index = getIndex(element);\n    var resp = { element: element, index: index, direction: dir };\n\n    // store most recent trigger\n    stepStates[index].direction = dir;\n    stepStates[index].state = \"enter\";\n    if (preserveOrder && check && dir === \"down\") { notifyOthers(index, \"above\"); }\n\n    if (preserveOrder && check && dir === \"up\") { notifyOthers(index, \"below\"); }\n\n    if (cb.stepEnter && !exclude[index]) {\n      cb.stepEnter(resp, stepStates);\n      if (isDebug) { notifyStep({ id: id, index: index, state: \"enter\" }); }\n      if (triggerOnce) { exclude[index] = true; }\n    }\n\n    if (progressMode) { notifyStepProgress(element); }\n  }\n\n  function notifyStepExit(element, dir) {\n    var index = getIndex(element);\n    var resp = { element: element, index: index, direction: dir };\n\n    if (progressMode) {\n      if (dir === \"down\" && stepStates[index].progress < 1)\n        { notifyStepProgress(element, 1); }\n      else if (dir === \"up\" && stepStates[index].progress > 0)\n        { notifyStepProgress(element, 0); }\n    }\n\n    // store most recent trigger\n    stepStates[index].direction = dir;\n    stepStates[index].state = \"exit\";\n\n    cb.stepExit(resp, stepStates);\n    if (isDebug) { notifyStep({ id: id, index: index, state: \"exit\" }); }\n  }\n\n  /* OBSERVER - INTERSECT HANDLING */\n  // this is good for entering while scrolling down + leaving while scrolling up\n  function intersectStepAbove(ref) {\n    var entry = ref[0];\n\n    updateDirection();\n    var isIntersecting = entry.isIntersecting;\n    var boundingClientRect = entry.boundingClientRect;\n    var target = entry.target;\n\n    // bottom = bottom edge of element from top of viewport\n    // bottomAdjusted = bottom edge of element from trigger\n    var top = boundingClientRect.top;\n    var bottom = boundingClientRect.bottom;\n    var topAdjusted = top - offsetMargin;\n    var bottomAdjusted = bottom - offsetMargin;\n    var index = getIndex(target);\n    var ss = stepStates[index];\n\n    // entering above is only when topAdjusted is negative\n    // and bottomAdjusted is positive\n    if (\n      isIntersecting &&\n      topAdjusted <= 0 &&\n      bottomAdjusted >= 0 &&\n      direction === \"down\" &&\n      ss.state !== \"enter\"\n    )\n      { notifyStepEnter(target, direction); }\n\n    // exiting from above is when topAdjusted is positive and not intersecting\n    if (\n      !isIntersecting &&\n      topAdjusted > 0 &&\n      direction === \"up\" &&\n      ss.state === \"enter\"\n    )\n      { notifyStepExit(target, direction); }\n  }\n\n  // this is good for entering while scrolling up + leaving while scrolling down\n  function intersectStepBelow(ref) {\n    var entry = ref[0];\n\n    updateDirection();\n    var isIntersecting = entry.isIntersecting;\n    var boundingClientRect = entry.boundingClientRect;\n    var target = entry.target;\n\n    // bottom = bottom edge of element from top of viewport\n    // bottomAdjusted = bottom edge of element from trigger\n    var top = boundingClientRect.top;\n    var bottom = boundingClientRect.bottom;\n    var topAdjusted = top - offsetMargin;\n    var bottomAdjusted = bottom - offsetMargin;\n    var index = getIndex(target);\n    var ss = stepStates[index];\n\n    // entering below is only when bottomAdjusted is positive\n    // and topAdjusted is negative\n    if (\n      isIntersecting &&\n      topAdjusted <= 0 &&\n      bottomAdjusted >= 0 &&\n      direction === \"up\" &&\n      ss.state !== \"enter\"\n    )\n      { notifyStepEnter(target, direction); }\n\n    // exiting from above is when bottomAdjusted is negative and not intersecting\n    if (\n      !isIntersecting &&\n      bottomAdjusted < 0 &&\n      direction === \"down\" &&\n      ss.state === \"enter\"\n    )\n      { notifyStepExit(target, direction); }\n  }\n\n  /*\n\tif there is a scroll event where a step never intersects (therefore\n\tskipping an enter/exit trigger), use this fallback to detect if it is\n\tin view\n\t*/\n  function intersectViewportAbove(ref) {\n    var entry = ref[0];\n\n    updateDirection();\n    var isIntersecting = entry.isIntersecting;\n    var target = entry.target;\n    var index = getIndex(target);\n    var ss = stepStates[index];\n\n    if (\n      isIntersecting &&\n      direction === \"down\" &&\n      ss.direction !== \"down\" &&\n      ss.state !== \"enter\"\n    ) {\n      notifyStepEnter(target, \"down\");\n      notifyStepExit(target, \"down\");\n    }\n  }\n\n  function intersectViewportBelow(ref) {\n    var entry = ref[0];\n\n    updateDirection();\n    var isIntersecting = entry.isIntersecting;\n    var target = entry.target;\n    var index = getIndex(target);\n    var ss = stepStates[index];\n    if (\n      isIntersecting &&\n      direction === \"up\" &&\n      ss.direction === \"down\" &&\n      ss.state !== \"enter\"\n    ) {\n      notifyStepEnter(target, \"up\");\n      notifyStepExit(target, \"up\");\n    }\n  }\n\n  function intersectStepProgress(ref) {\n    var entry = ref[0];\n\n    updateDirection();\n    var isIntersecting = entry.isIntersecting;\n    var intersectionRatio = entry.intersectionRatio;\n    var boundingClientRect = entry.boundingClientRect;\n    var target = entry.target;\n    var bottom = boundingClientRect.bottom;\n    var bottomAdjusted = bottom - offsetMargin;\n    if (isIntersecting && bottomAdjusted >= 0) {\n      notifyStepProgress(target, +intersectionRatio);\n    }\n  }\n\n  /*  OBSERVER - CREATION */\n  // jump into viewport\n  function updateViewportAboveIO() {\n    io.viewportAbove = stepEl.map(function (el, i) {\n      var marginTop = pageH - stepOffsetTop[i];\n      var marginBottom = offsetMargin - viewH - stepOffsetHeight[i];\n      var rootMargin = marginTop + \"px 0px \" + marginBottom + \"px 0px\";\n      var options = { rootMargin: rootMargin };\n      // console.log(options);\n      var obs = new IntersectionObserver(intersectViewportAbove, options);\n      obs.observe(el);\n      return obs;\n    });\n  }\n\n  function updateViewportBelowIO() {\n    io.viewportBelow = stepEl.map(function (el, i) {\n      var marginTop = -offsetMargin - stepOffsetHeight[i];\n      var marginBottom = offsetMargin - viewH + stepOffsetHeight[i] + pageH;\n      var rootMargin = marginTop + \"px 0px \" + marginBottom + \"px 0px\";\n      var options = { rootMargin: rootMargin };\n      // console.log(options);\n      var obs = new IntersectionObserver(intersectViewportBelow, options);\n      obs.observe(el);\n      return obs;\n    });\n  }\n\n  // look above for intersection\n  function updateStepAboveIO() {\n    io.stepAbove = stepEl.map(function (el, i) {\n      var marginTop = -offsetMargin + stepOffsetHeight[i];\n      var marginBottom = offsetMargin - viewH;\n      var rootMargin = marginTop + \"px 0px \" + marginBottom + \"px 0px\";\n      var options = { rootMargin: rootMargin };\n      // console.log(options);\n      var obs = new IntersectionObserver(intersectStepAbove, options);\n      obs.observe(el);\n      return obs;\n    });\n  }\n\n  // look below for intersection\n  function updateStepBelowIO() {\n    io.stepBelow = stepEl.map(function (el, i) {\n      var marginTop = -offsetMargin;\n      var marginBottom = offsetMargin - viewH + stepOffsetHeight[i];\n      var rootMargin = marginTop + \"px 0px \" + marginBottom + \"px 0px\";\n      var options = { rootMargin: rootMargin };\n      // console.log(options);\n      var obs = new IntersectionObserver(intersectStepBelow, options);\n      obs.observe(el);\n      return obs;\n    });\n  }\n\n  // progress progress tracker\n  function updateStepProgressIO() {\n    io.stepProgress = stepEl.map(function (el, i) {\n      var marginTop = stepOffsetHeight[i] - offsetMargin;\n      var marginBottom = -viewH + offsetMargin;\n      var rootMargin = marginTop + \"px 0px \" + marginBottom + \"px 0px\";\n      var threshold = createThreshold(stepOffsetHeight[i]);\n      var options = { rootMargin: rootMargin, threshold: threshold };\n      // console.log(options);\n      var obs = new IntersectionObserver(intersectStepProgress, options);\n      obs.observe(el);\n      return obs;\n    });\n  }\n\n  function updateIO() {\n    OBSERVER_NAMES.forEach(disconnectObserver);\n\n    updateViewportAboveIO();\n    updateViewportBelowIO();\n    updateStepAboveIO();\n    updateStepBelowIO();\n\n    if (progressMode) { updateStepProgressIO(); }\n  }\n\n  /* SETUP FUNCTIONS */\n\n  function indexSteps() {\n    stepEl.forEach(function (el, i) { return el.setAttribute(\"data-scrollama-index\", i); });\n  }\n\n  function setupStates() {\n    stepStates = stepEl.map(function () { return ({\n      direction: null,\n      state: null,\n      progress: 0\n    }); });\n  }\n\n  function addDebug() {\n    if (isDebug) { setup({ id: id, stepEl: stepEl, offsetVal: offsetVal }); }\n  }\n\n  function isYScrollable(element) {\n    var style = window.getComputedStyle(element);\n    return (\n      (style.overflowY === \"scroll\" || style.overflowY === \"auto\") &&\n      element.scrollHeight > element.clientHeight\n    );\n  }\n\n  // recursively search the DOM for a parent container with overflowY: scroll and fixed height\n  // ends at document\n  function anyScrollableParent(element) {\n    if (element && element.nodeType === 1) {\n      // check dom elements only, stop at document\n      // if a scrollable element is found return the element\n      // if not continue to next parent\n      return isYScrollable(element)\n        ? element\n        : anyScrollableParent(element.parentNode);\n    }\n    return false; // didn't find a scrollable parent\n  }\n\n  var S = {};\n\n  S.setup = function (ref) {\n    var step = ref.step;\n    var offset = ref.offset; if ( offset === void 0 ) offset = 0.5;\n    var progress = ref.progress; if ( progress === void 0 ) progress = false;\n    var threshold = ref.threshold; if ( threshold === void 0 ) threshold = 4;\n    var debug = ref.debug; if ( debug === void 0 ) debug = false;\n    var order = ref.order; if ( order === void 0 ) order = true;\n    var once = ref.once; if ( once === void 0 ) once = false;\n\n    reset();\n    // create id unique to this scrollama instance\n    id = generateInstanceID();\n\n    stepEl = selectAll(step);\n\n    if (!stepEl.length) {\n      err(\"no step elements\");\n      return S;\n    }\n\n    // ensure that no step has a scrollable parent element in the dom tree\n    // check current step for scrollable parent\n    // assume no scrollable parents to start\n    var scrollableParent = stepEl.reduce(\n      function (foundScrollable, s) { return foundScrollable || anyScrollableParent(s.parentNode); },\n      false\n    );\n    if (scrollableParent) {\n      console.error(\n        \"scrollama error: step elements cannot be children of a scrollable element. Remove any css on the parent element with overflow: scroll; or overflow: auto; on elements with fixed height.\",\n        scrollableParent\n      );\n    }\n\n    // options\n    isDebug = debug;\n    progressMode = progress;\n    preserveOrder = order;\n    triggerOnce = once;\n\n    S.offsetTrigger(offset);\n    progressThreshold = Math.max(1, +threshold);\n\n    isReady = true;\n\n    // customize\n    addDebug();\n    indexSteps();\n    setupStates();\n    handleResize();\n    S.enable();\n    return S;\n  };\n\n  S.resize = function () {\n    handleResize();\n    return S;\n  };\n\n  S.enable = function () {\n    handleEnable(true);\n    return S;\n  };\n\n  S.disable = function () {\n    handleEnable(false);\n    return S;\n  };\n\n  S.destroy = function () {\n    handleEnable(false);\n    reset();\n  };\n\n  S.offsetTrigger = function (x) {\n    if (x === null) { return offsetVal; }\n\n    if (typeof x === \"number\") {\n      format = \"percent\";\n      if (x > 1) { err(\"offset value is greater than 1. Fallback to 1.\"); }\n      if (x < 0) { err(\"offset value is lower than 0. Fallback to 0.\"); }\n      offsetVal = Math.min(Math.max(0, x), 1);\n    } else if (typeof x === \"string\" && x.indexOf(\"px\") > 0) {\n      var v = +x.replace(\"px\", \"\");\n      if (!isNaN(v)) {\n        format = \"pixels\";\n        offsetVal = v;\n      } else {\n        err(\"offset value must be in 'px' format. Fallback to 0.5.\");\n        offsetVal = 0.5;\n      }\n    } else {\n      err(\"offset value does not include 'px'. Fallback to 0.5.\");\n      offsetVal = 0.5;\n    }\n    return S;\n  };\n\n  S.onStepEnter = function (f) {\n    if (typeof f === \"function\") { cb.stepEnter = f; }\n    else { err(\"onStepEnter requires a function\"); }\n    return S;\n  };\n\n  S.onStepExit = function (f) {\n    if (typeof f === \"function\") { cb.stepExit = f; }\n    else { err(\"onStepExit requires a function\"); }\n    return S;\n  };\n\n  S.onStepProgress = function (f) {\n    if (typeof f === \"function\") { cb.stepProgress = f; }\n    else { err(\"onStepProgress requires a function\"); }\n    return S;\n  };\n\n  return S;\n}\n\nreturn scrollama;\n\n})));\n","/**\n * Virtual DOM Node\n * @typedef VNode\n * @property {string | function} nodeName The string of the DOM node to create or Component constructor to render\n * @property {Array<VNode | string>} children The children of node\n * @property {string | number | undefined} key The key used to identify this VNode in a list\n * @property {object} attributes The properties of this VNode\n */\nexport const VNode = function VNode() {};\n","/**\n * @typedef {import('./component').Component} Component\n * @typedef {import('./vnode').VNode} VNode\n */\n\n/**\n * Global options\n * @public\n * @typedef Options\n * @property {boolean} [syncComponentUpdates] If `true`, `prop` changes trigger synchronous component updates. Defaults to true.\n * @property {(vnode: VNode) => void} [vnode] Processes all created VNodes.\n * @property {(component: Component) => void} [afterMount] Hook invoked after a component is mounted.\n * @property {(component: Component) => void} [afterUpdate] Hook invoked after the DOM is updated with a component's latest render.\n * @property {(component: Component) => void} [beforeUnmount] Hook invoked immediately before a component is unmounted.\n * @property {(rerender: function) => void} [debounceRendering] Hook invoked whenever a rerender is requested. Can be used to debounce rerenders.\n * @property {(event: Event) => Event | void} [event] Hook invoked before any Preact event listeners. The return value (if any) replaces the native browser event given to event listeners\n */\n\n/** @type {Options}  */\nconst options = {};\n\nexport default options;\n","import { VNode } from './vnode';\nimport options from './options';\n\n\nconst stack = [];\n\nconst EMPTY_CHILDREN = [];\n\n/**\n * JSX/hyperscript reviver.\n * @see http://jasonformat.com/wtf-is-jsx\n * Benchmarks: https://esbench.com/bench/57ee8f8e330ab09900a1a1a0\n *\n * Note: this is exported as both `h()` and `createElement()` for compatibility\n * reasons.\n *\n * Creates a VNode (virtual DOM element). A tree of VNodes can be used as a\n * lightweight representation of the structure of a DOM tree. This structure can\n * be realized by recursively comparing it against the current _actual_ DOM\n * structure, and applying only the differences.\n *\n * `h()`/`createElement()` accepts an element name, a list of attributes/props,\n * and optionally children to append to the element.\n *\n * @example The following DOM tree\n *\n * `<div id=\"foo\" name=\"bar\">Hello!</div>`\n *\n * can be constructed using this function as:\n *\n * `h('div', { id: 'foo', name : 'bar' }, 'Hello!');`\n *\n * @param {string | function} nodeName An element name. Ex: `div`, `a`, `span`, etc.\n * @param {object | null} attributes Any attributes/props to set on the created element.\n * @param {VNode[]} [rest] Additional arguments are taken to be children to\n *  append. Can be infinitely nested Arrays.\n *\n * @public\n */\nexport function h(nodeName, attributes) {\n\tlet children=EMPTY_CHILDREN, lastSimple, child, simple, i;\n\tfor (i=arguments.length; i-- > 2; ) {\n\t\tstack.push(arguments[i]);\n\t}\n\tif (attributes && attributes.children!=null) {\n\t\tif (!stack.length) stack.push(attributes.children);\n\t\tdelete attributes.children;\n\t}\n\twhile (stack.length) {\n\t\tif ((child = stack.pop()) && child.pop!==undefined) {\n\t\t\tfor (i=child.length; i--; ) stack.push(child[i]);\n\t\t}\n\t\telse {\n\t\t\tif (typeof child==='boolean') child = null;\n\n\t\t\tif ((simple = typeof nodeName!=='function')) {\n\t\t\t\tif (child==null) child = '';\n\t\t\t\telse if (typeof child==='number') child = String(child);\n\t\t\t\telse if (typeof child!=='string') simple = false;\n\t\t\t}\n\n\t\t\tif (simple && lastSimple) {\n\t\t\t\tchildren[children.length-1] += child;\n\t\t\t}\n\t\t\telse if (children===EMPTY_CHILDREN) {\n\t\t\t\tchildren = [child];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tchildren.push(child);\n\t\t\t}\n\n\t\t\tlastSimple = simple;\n\t\t}\n\t}\n\n\tlet p = new VNode();\n\tp.nodeName = nodeName;\n\tp.children = children;\n\tp.attributes = attributes==null ? undefined : attributes;\n\tp.key = attributes==null ? undefined : attributes.key;\n\n\t// if a \"vnode hook\" is defined, pass every created VNode to it\n\tif (options.vnode!==undefined) options.vnode(p);\n\n\treturn p;\n}\n","/**\n * Copy all properties from `props` onto `obj`.\n * @param {object} obj Object onto which properties should be copied.\n * @param {object} props Object from which to copy properties.\n * @returns {object}\n * @private\n */\nexport function extend(obj, props) {\n\tfor (let i in props) obj[i] = props[i];\n\treturn obj;\n}\n\n/** Invoke or update a ref, depending on whether it is a function or object ref.\n *  @param {object|function} [ref=null]\n *  @param {any} [value]\n */\nexport function applyRef(ref, value) {\n\tif (ref) {\n\t\tif (typeof ref=='function') ref(value);\n\t\telse ref.current = value;\n\t}\n}\n\n/**\n * Call a function asynchronously, as soon as possible. Makes\n * use of HTML Promise to schedule the callback if available,\n * otherwise falling back to `setTimeout` (mainly for IE<11).\n * @type {(callback: function) => void}\n */\nexport const defer = typeof Promise=='function' ? Promise.resolve().then.bind(Promise.resolve()) : setTimeout;\n","// render modes\n\n/** Do not re-render a component */\nexport const NO_RENDER = 0;\n/** Synchronously re-render a component and its children */\nexport const SYNC_RENDER = 1;\n/** Synchronously re-render a component, even if its lifecycle methods attempt to prevent it. */\nexport const FORCE_RENDER = 2;\n/** Queue asynchronous re-render of a component and it's children */\nexport const ASYNC_RENDER = 3;\n\n\nexport const ATTR_KEY = '__preactattr_';\n\n/** DOM properties that should NOT have \"px\" added when numeric */\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|ows|mnc|ntw|ine[ch]|zoo|^ord/i;\n\n","import options from './options';\nimport { defer } from './util';\nimport { renderComponent } from './vdom/component';\n\n/**\n * Managed queue of dirty components to be re-rendered\n * @type {Array<import('./component').Component>}\n */\nlet items = [];\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./component').Component} component The component to rerender\n */\nexport function enqueueRender(component) {\n\tif (!component._dirty && (component._dirty = true) && items.push(component)==1) {\n\t\t(options.debounceRendering || defer)(rerender);\n\t}\n}\n\n/** Rerender all enqueued dirty components */\nexport function rerender() {\n\tlet p;\n\twhile ( (p = items.pop()) ) {\n\t\tif (p._dirty) renderComponent(p);\n\t}\n}\n","import { extend } from '../util';\n\n\n/**\n * Check if two nodes are equivalent.\n * @param {import('../dom').PreactElement} node DOM Node to compare\n * @param {import('../vnode').VNode} vnode Virtual DOM node to compare\n * @param {boolean} [hydrating=false] If true, ignores component constructors\n *  when comparing.\n * @private\n */\nexport function isSameNodeType(node, vnode, hydrating) {\n\tif (typeof vnode==='string' || typeof vnode==='number') {\n\t\treturn node.splitText!==undefined;\n\t}\n\tif (typeof vnode.nodeName==='string') {\n\t\treturn !node._componentConstructor && isNamedNode(node, vnode.nodeName);\n\t}\n\treturn hydrating || node._componentConstructor===vnode.nodeName;\n}\n\n\n/**\n * Check if an Element has a given nodeName, case-insensitively.\n * @param {import('../dom').PreactElement} node A DOM Element to inspect the name of.\n * @param {string} nodeName Unnormalized name to compare against.\n */\nexport function isNamedNode(node, nodeName) {\n\treturn node.normalizedNodeName===nodeName || node.nodeName.toLowerCase()===nodeName.toLowerCase();\n}\n\n\n/**\n * Reconstruct Component-style `props` from a VNode.\n * Ensures default/fallback values from `defaultProps`:\n * Own-properties of `defaultProps` not present in `vnode.attributes` are added.\n * @param {import('../vnode').VNode} vnode The VNode to get props for\n * @returns {object} The props to use for this VNode\n */\nexport function getNodeProps(vnode) {\n\tlet props = extend({}, vnode.attributes);\n\tprops.children = vnode.children;\n\n\tlet defaultProps = vnode.nodeName.defaultProps;\n\tif (defaultProps!==undefined) {\n\t\tfor (let i in defaultProps) {\n\t\t\tif (props[i]===undefined) {\n\t\t\t\tprops[i] = defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn props;\n}\n","import { IS_NON_DIMENSIONAL } from '../constants';\nimport { applyRef } from '../util';\nimport options from '../options';\n\n/**\n * A DOM event listener\n * @typedef {(e: Event) => void} EventListner\n */\n\n/**\n * A mapping of event types to event listeners\n * @typedef {Object.<string, EventListener>} EventListenerMap\n */\n\n/**\n * Properties Preact adds to elements it creates\n * @typedef PreactElementExtensions\n * @property {string} [normalizedNodeName] A normalized node name to use in diffing\n * @property {EventListenerMap} [_listeners] A map of event listeners added by components to this DOM node\n * @property {import('../component').Component} [_component] The component that rendered this DOM node\n * @property {function} [_componentConstructor] The constructor of the component that rendered this DOM node\n */\n\n/**\n * A DOM element that has been extended with Preact properties\n * @typedef {Element & ElementCSSInlineStyle & PreactElementExtensions} PreactElement\n */\n\n/**\n * Create an element with the given nodeName.\n * @param {string} nodeName The DOM node to create\n * @param {boolean} [isSvg=false] If `true`, creates an element within the SVG\n *  namespace.\n * @returns {PreactElement} The created DOM node\n */\nexport function createNode(nodeName, isSvg) {\n\t/** @type {PreactElement} */\n\tlet node = isSvg ? document.createElementNS('http://www.w3.org/2000/svg', nodeName) : document.createElement(nodeName);\n\tnode.normalizedNodeName = nodeName;\n\treturn node;\n}\n\n\n/**\n * Remove a child node from its parent if attached.\n * @param {Node} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n\n\n/**\n * Set a named attribute on the given Node, with special behavior for some names\n * and event handlers. If `value` is `null`, the attribute/handler will be\n * removed.\n * @param {PreactElement} node An element to mutate\n * @param {string} name The name/key to set, such as an event or attribute name\n * @param {*} old The last value that was set for this name/node pair\n * @param {*} value An attribute value, such as a function to be used as an\n *  event handler\n * @param {boolean} isSvg Are we currently diffing inside an svg?\n * @private\n */\nexport function setAccessor(node, name, old, value, isSvg) {\n\tif (name==='className') name = 'class';\n\n\n\tif (name==='key') {\n\t\t// ignore\n\t}\n\telse if (name==='ref') {\n\t\tapplyRef(old, null);\n\t\tapplyRef(value, node);\n\t}\n\telse if (name==='class' && !isSvg) {\n\t\tnode.className = value || '';\n\t}\n\telse if (name==='style') {\n\t\tif (!value || typeof value==='string' || typeof old==='string') {\n\t\t\tnode.style.cssText = value || '';\n\t\t}\n\t\tif (value && typeof value==='object') {\n\t\t\tif (typeof old!=='string') {\n\t\t\t\tfor (let i in old) if (!(i in value)) node.style[i] = '';\n\t\t\t}\n\t\t\tfor (let i in value) {\n\t\t\t\tnode.style[i] = typeof value[i]==='number' && IS_NON_DIMENSIONAL.test(i)===false ? (value[i]+'px') : value[i];\n\t\t\t}\n\t\t}\n\t}\n\telse if (name==='dangerouslySetInnerHTML') {\n\t\tif (value) node.innerHTML = value.__html || '';\n\t}\n\telse if (name[0]=='o' && name[1]=='n') {\n\t\tlet useCapture = name !== (name=name.replace(/Capture$/, ''));\n\t\tname = name.toLowerCase().substring(2);\n\t\tif (value) {\n\t\t\tif (!old) node.addEventListener(name, eventProxy, useCapture);\n\t\t}\n\t\telse {\n\t\t\tnode.removeEventListener(name, eventProxy, useCapture);\n\t\t}\n\t\t(node._listeners || (node._listeners = {}))[name] = value;\n\t}\n\telse if (name!=='list' && name!=='type' && !isSvg && name in node) {\n\t\t// Attempt to set a DOM property to the given value.\n\t\t// IE & FF throw for certain property-value combinations.\n\t\ttry {\n\t\t\tnode[name] = value==null ? '' : value;\n\t\t} catch (e) { }\n\t\tif ((value==null || value===false) && name!='spellcheck') node.removeAttribute(name);\n\t}\n\telse {\n\t\tlet ns = isSvg && (name !== (name = name.replace(/^xlink:?/, '')));\n\t\t// spellcheck is treated differently than all other boolean values and\n\t\t// should not be removed when the value is `false`. See:\n\t\t// https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-spellcheck\n\t\tif (value==null || value===false) {\n\t\t\tif (ns) node.removeAttributeNS('http://www.w3.org/1999/xlink', name.toLowerCase());\n\t\t\telse node.removeAttribute(name);\n\t\t}\n\t\telse if (typeof value!=='function') {\n\t\t\tif (ns) node.setAttributeNS('http://www.w3.org/1999/xlink', name.toLowerCase(), value);\n\t\t\telse node.setAttribute(name, value);\n\t\t}\n\t}\n}\n\n\n/**\n * Proxy an event to hooked event handlers\n * @param {Event} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\treturn this._listeners[e.type](options.event && options.event(e) || e);\n}\n","import { ATTR_KEY } from '../constants';\nimport { isSameNodeType, isNamedNode } from './index';\nimport { buildComponentFromVNode } from './component';\nimport { createNode, setAccessor } from '../dom/index';\nimport { unmountComponent } from './component';\nimport options from '../options';\nimport { applyRef } from '../util';\nimport { removeNode } from '../dom/index';\n\n/**\n * Queue of components that have been mounted and are awaiting componentDidMount\n * @type {Array<import('../component').Component>}\n */\nexport const mounts = [];\n\n/** Diff recursion count, used to track the end of the diff cycle. */\nexport let diffLevel = 0;\n\n/** Global flag indicating if the diff is currently within an SVG */\nlet isSvgMode = false;\n\n/** Global flag indicating if the diff is performing hydration */\nlet hydrating = false;\n\n/** Invoke queued componentDidMount lifecycle methods */\nexport function flushMounts() {\n\tlet c;\n\twhile ((c = mounts.shift())) {\n\t\tif (options.afterMount) options.afterMount(c);\n\t\tif (c.componentDidMount) c.componentDidMount();\n\t}\n}\n\n\n/**\n * Apply differences in a given vnode (and it's deep children) to a real DOM Node.\n * @param {import('../dom').PreactElement} dom A DOM node to mutate into the shape of a `vnode`\n * @param {import('../vnode').VNode} vnode A VNode (with descendants forming a tree) representing\n *  the desired DOM structure\n * @param {object} context The current context\n * @param {boolean} mountAll Whether or not to immediately mount all components\n * @param {Element} parent ?\n * @param {boolean} componentRoot ?\n * @returns {import('../dom').PreactElement} The created/mutated element\n * @private\n */\nexport function diff(dom, vnode, context, mountAll, parent, componentRoot) {\n\t// diffLevel having been 0 here indicates initial entry into the diff (not a subdiff)\n\tif (!diffLevel++) {\n\t\t// when first starting the diff, check if we're diffing an SVG or within an SVG\n\t\tisSvgMode = parent!=null && parent.ownerSVGElement!==undefined;\n\n\t\t// hydration is indicated by the existing element to be diffed not having a prop cache\n\t\thydrating = dom!=null && !(ATTR_KEY in dom);\n\t}\n\n\tlet ret = idiff(dom, vnode, context, mountAll, componentRoot);\n\n\t// append the element if its a new parent\n\tif (parent && ret.parentNode!==parent) parent.appendChild(ret);\n\n\t// diffLevel being reduced to 0 means we're exiting the diff\n\tif (!--diffLevel) {\n\t\thydrating = false;\n\t\t// invoke queued componentDidMount lifecycle methods\n\t\tif (!componentRoot) flushMounts();\n\t}\n\n\treturn ret;\n}\n\n\n/**\n * Internals of `diff()`, separated to allow bypassing diffLevel / mount flushing.\n * @param {import('../dom').PreactElement} dom A DOM node to mutate into the shape of a `vnode`\n * @param {import('../vnode').VNode} vnode A VNode (with descendants forming a tree) representing the desired DOM structure\n * @param {object} context The current context\n * @param {boolean} mountAll Whether or not to immediately mount all components\n * @param {boolean} [componentRoot] ?\n * @private\n */\nfunction idiff(dom, vnode, context, mountAll, componentRoot) {\n\tlet out = dom,\n\t\tprevSvgMode = isSvgMode;\n\n\t// empty values (null, undefined, booleans) render as empty Text nodes\n\tif (vnode==null || typeof vnode==='boolean') vnode = '';\n\n\n\t// Fast case: Strings & Numbers create/update Text nodes.\n\tif (typeof vnode==='string' || typeof vnode==='number') {\n\n\t\t// update if it's already a Text node:\n\t\tif (dom && dom.splitText!==undefined && dom.parentNode && (!dom._component || componentRoot)) {\n\t\t\t/* istanbul ignore if */ /* Browser quirk that can't be covered: https://github.com/developit/preact/commit/fd4f21f5c45dfd75151bd27b4c217d8003aa5eb9 */\n\t\t\tif (dom.nodeValue!=vnode) {\n\t\t\t\tdom.nodeValue = vnode;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// it wasn't a Text node: replace it with one and recycle the old Element\n\t\t\tout = document.createTextNode(vnode);\n\t\t\tif (dom) {\n\t\t\t\tif (dom.parentNode) dom.parentNode.replaceChild(out, dom);\n\t\t\t\trecollectNodeTree(dom, true);\n\t\t\t}\n\t\t}\n\n\t\tout[ATTR_KEY] = true;\n\n\t\treturn out;\n\t}\n\n\n\t// If the VNode represents a Component, perform a component diff:\n\tlet vnodeName = vnode.nodeName;\n\tif (typeof vnodeName==='function') {\n\t\treturn buildComponentFromVNode(dom, vnode, context, mountAll);\n\t}\n\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tisSvgMode = vnodeName==='svg' ? true : vnodeName==='foreignObject' ? false : isSvgMode;\n\n\n\t// If there's no existing element or it's the wrong type, create a new one:\n\tvnodeName = String(vnodeName);\n\tif (!dom || !isNamedNode(dom, vnodeName)) {\n\t\tout = createNode(vnodeName, isSvgMode);\n\n\t\tif (dom) {\n\t\t\t// move children into the replacement node\n\t\t\twhile (dom.firstChild) out.appendChild(dom.firstChild);\n\n\t\t\t// if the previous Element was mounted into the DOM, replace it inline\n\t\t\tif (dom.parentNode) dom.parentNode.replaceChild(out, dom);\n\n\t\t\t// recycle the old element (skips non-Element node types)\n\t\t\trecollectNodeTree(dom, true);\n\t\t}\n\t}\n\n\n\tlet fc = out.firstChild,\n\t\tprops = out[ATTR_KEY],\n\t\tvchildren = vnode.children;\n\n\tif (props==null) {\n\t\tprops = out[ATTR_KEY] = {};\n\t\tfor (let a=out.attributes, i=a.length; i--; ) props[a[i].name] = a[i].value;\n\t}\n\n\t// Optimization: fast-path for elements containing a single TextNode:\n\tif (!hydrating && vchildren && vchildren.length===1 && typeof vchildren[0]==='string' && fc!=null && fc.splitText!==undefined && fc.nextSibling==null) {\n\t\tif (fc.nodeValue!=vchildren[0]) {\n\t\t\tfc.nodeValue = vchildren[0];\n\t\t}\n\t}\n\t// otherwise, if there are existing or new children, diff them:\n\telse if (vchildren && vchildren.length || fc!=null) {\n\t\tinnerDiffNode(out, vchildren, context, mountAll, hydrating || props.dangerouslySetInnerHTML!=null);\n\t}\n\n\n\t// Apply attributes/props from VNode to the DOM Element:\n\tdiffAttributes(out, vnode.attributes, props);\n\n\n\t// restore previous SVG mode: (in case we're exiting an SVG namespace)\n\tisSvgMode = prevSvgMode;\n\n\treturn out;\n}\n\n\n/**\n * Apply child and attribute changes between a VNode and a DOM Node to the DOM.\n * @param {import('../dom').PreactElement} dom Element whose children should be compared & mutated\n * @param {Array<import('../vnode').VNode>} vchildren Array of VNodes to compare to `dom.childNodes`\n * @param {object} context Implicitly descendant context object (from most\n *  recent `getChildContext()`)\n * @param {boolean} mountAll Whether or not to immediately mount all components\n * @param {boolean} isHydrating if `true`, consumes externally created elements\n *  similar to hydration\n */\nfunction innerDiffNode(dom, vchildren, context, mountAll, isHydrating) {\n\tlet originalChildren = dom.childNodes,\n\t\tchildren = [],\n\t\tkeyed = {},\n\t\tkeyedLen = 0,\n\t\tmin = 0,\n\t\tlen = originalChildren.length,\n\t\tchildrenLen = 0,\n\t\tvlen = vchildren ? vchildren.length : 0,\n\t\tj, c, f, vchild, child;\n\n\t// Build up a map of keyed children and an Array of unkeyed children:\n\tif (len!==0) {\n\t\tfor (let i=0; i<len; i++) {\n\t\t\tlet child = originalChildren[i],\n\t\t\t\tprops = child[ATTR_KEY],\n\t\t\t\tkey = vlen && props ? child._component ? child._component.__key : props.key : null;\n\t\t\tif (key!=null) {\n\t\t\t\tkeyedLen++;\n\t\t\t\tkeyed[key] = child;\n\t\t\t}\n\t\t\telse if (props || (child.splitText!==undefined ? (isHydrating ? child.nodeValue.trim() : true) : isHydrating)) {\n\t\t\t\tchildren[childrenLen++] = child;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (vlen!==0) {\n\t\tfor (let i=0; i<vlen; i++) {\n\t\t\tvchild = vchildren[i];\n\t\t\tchild = null;\n\n\t\t\t// attempt to find a node based on key matching\n\t\t\tlet key = vchild.key;\n\t\t\tif (key!=null) {\n\t\t\t\tif (keyedLen && keyed[key]!==undefined) {\n\t\t\t\t\tchild = keyed[key];\n\t\t\t\t\tkeyed[key] = undefined;\n\t\t\t\t\tkeyedLen--;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// attempt to pluck a node of the same type from the existing children\n\t\t\telse if (min<childrenLen) {\n\t\t\t\tfor (j=min; j<childrenLen; j++) {\n\t\t\t\t\tif (children[j]!==undefined && isSameNodeType(c = children[j], vchild, isHydrating)) {\n\t\t\t\t\t\tchild = c;\n\t\t\t\t\t\tchildren[j] = undefined;\n\t\t\t\t\t\tif (j===childrenLen-1) childrenLen--;\n\t\t\t\t\t\tif (j===min) min++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// morph the matched/found/created DOM child to match vchild (deep)\n\t\t\tchild = idiff(child, vchild, context, mountAll);\n\n\t\t\tf = originalChildren[i];\n\t\t\tif (child && child!==dom && child!==f) {\n\t\t\t\tif (f==null) {\n\t\t\t\t\tdom.appendChild(child);\n\t\t\t\t}\n\t\t\t\telse if (child===f.nextSibling) {\n\t\t\t\t\tremoveNode(f);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdom.insertBefore(child, f);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\t// remove unused keyed children:\n\tif (keyedLen) {\n\t\tfor (let i in keyed) if (keyed[i]!==undefined) recollectNodeTree(keyed[i], false);\n\t}\n\n\t// remove orphaned unkeyed children:\n\twhile (min<=childrenLen) {\n\t\tif ((child = children[childrenLen--])!==undefined) recollectNodeTree(child, false);\n\t}\n}\n\n\n\n/**\n * Recursively recycle (or just unmount) a node and its descendants.\n * @param {import('../dom').PreactElement} node DOM node to start\n *  unmount/removal from\n * @param {boolean} [unmountOnly=false] If `true`, only triggers unmount\n *  lifecycle, skips removal\n */\nexport function recollectNodeTree(node, unmountOnly) {\n\tlet component = node._component;\n\tif (component) {\n\t\t// if node is owned by a Component, unmount that component (ends up recursing back here)\n\t\tunmountComponent(component);\n\t}\n\telse {\n\t\t// If the node's VNode had a ref function, invoke it with null here.\n\t\t// (this is part of the React spec, and smart for unsetting references)\n\t\tif (node[ATTR_KEY]!=null) applyRef(node[ATTR_KEY].ref, null);\n\n\t\tif (unmountOnly===false || node[ATTR_KEY]==null) {\n\t\t\tremoveNode(node);\n\t\t}\n\n\t\tremoveChildren(node);\n\t}\n}\n\n\n/**\n * Recollect/unmount all children.\n *\t- we use .lastChild here because it causes less reflow than .firstChild\n *\t- it's also cheaper than accessing the .childNodes Live NodeList\n */\nexport function removeChildren(node) {\n\tnode = node.lastChild;\n\twhile (node) {\n\t\tlet next = node.previousSibling;\n\t\trecollectNodeTree(node, true);\n\t\tnode = next;\n\t}\n}\n\n\n/**\n * Apply differences in attributes from a VNode to the given DOM Element.\n * @param {import('../dom').PreactElement} dom Element with attributes to diff `attrs` against\n * @param {object} attrs The desired end-state key-value attribute pairs\n * @param {object} old Current/previous attributes (from previous VNode or\n *  element's prop cache)\n */\nfunction diffAttributes(dom, attrs, old) {\n\tlet name;\n\n\t// remove attributes no longer present on the vnode by setting them to undefined\n\tfor (name in old) {\n\t\tif (!(attrs && attrs[name]!=null) && old[name]!=null) {\n\t\t\tsetAccessor(dom, name, old[name], old[name] = undefined, isSvgMode);\n\t\t}\n\t}\n\n\t// add new & update changed attributes\n\tfor (name in attrs) {\n\t\tif (name!=='children' && name!=='innerHTML' && (!(name in old) || attrs[name]!==(name==='value' || name==='checked' ? dom[name] : old[name]))) {\n\t\t\tsetAccessor(dom, name, old[name], old[name] = attrs[name], isSvgMode);\n\t\t}\n\t}\n}\n","import { SYNC_RENDER, NO_RENDER, FORCE_RENDER, ASYNC_RENDER, ATTR_KEY } from '../constants';\nimport options from '../options';\nimport { extend, applyRef } from '../util';\nimport { enqueueRender } from '../render-queue';\nimport { getNodeProps } from './index';\nimport { diff, mounts, diffLevel, flushMounts, recollectNodeTree, removeChildren } from './diff';\nimport { createComponent, recyclerComponents } from './component-recycler';\nimport { removeNode } from '../dom/index';\n\n/**\n * Set a component's `props` and possibly re-render the component\n * @param {import('../component').Component} component The Component to set props on\n * @param {object} props The new props\n * @param {number} renderMode Render options - specifies how to re-render the component\n * @param {object} context The new context\n * @param {boolean} mountAll Whether or not to immediately mount all components\n */\nexport function setComponentProps(component, props, renderMode, context, mountAll) {\n\tif (component._disable) return;\n\tcomponent._disable = true;\n\n\tcomponent.__ref = props.ref;\n\tcomponent.__key = props.key;\n\tdelete props.ref;\n\tdelete props.key;\n\n\tif (typeof component.constructor.getDerivedStateFromProps === 'undefined') {\n\t\tif (!component.base || mountAll) {\n\t\t\tif (component.componentWillMount) component.componentWillMount();\n\t\t}\n\t\telse if (component.componentWillReceiveProps) {\n\t\t\tcomponent.componentWillReceiveProps(props, context);\n\t\t}\n\t}\n\n\tif (context && context!==component.context) {\n\t\tif (!component.prevContext) component.prevContext = component.context;\n\t\tcomponent.context = context;\n\t}\n\n\tif (!component.prevProps) component.prevProps = component.props;\n\tcomponent.props = props;\n\n\tcomponent._disable = false;\n\n\tif (renderMode!==NO_RENDER) {\n\t\tif (renderMode===SYNC_RENDER || options.syncComponentUpdates!==false || !component.base) {\n\t\t\trenderComponent(component, SYNC_RENDER, mountAll);\n\t\t}\n\t\telse {\n\t\t\tenqueueRender(component);\n\t\t}\n\t}\n\n\tapplyRef(component.__ref, component);\n}\n\n\n\n/**\n * Render a Component, triggering necessary lifecycle events and taking\n * High-Order Components into account.\n * @param {import('../component').Component} component The component to render\n * @param {number} [renderMode] render mode, see constants.js for available options.\n * @param {boolean} [mountAll] Whether or not to immediately mount all components\n * @param {boolean} [isChild] ?\n * @private\n */\nexport function renderComponent(component, renderMode, mountAll, isChild) {\n\tif (component._disable) return;\n\n\tlet props = component.props,\n\t\tstate = component.state,\n\t\tcontext = component.context,\n\t\tpreviousProps = component.prevProps || props,\n\t\tpreviousState = component.prevState || state,\n\t\tpreviousContext = component.prevContext || context,\n\t\tisUpdate = component.base,\n\t\tnextBase = component.nextBase,\n\t\tinitialBase = isUpdate || nextBase,\n\t\tinitialChildComponent = component._component,\n\t\tskip = false,\n\t\tsnapshot = previousContext,\n\t\trendered, inst, cbase;\n\n\tif (component.constructor.getDerivedStateFromProps) {\n\t\tstate = extend(extend({}, state), component.constructor.getDerivedStateFromProps(props, state));\n\t\tcomponent.state = state;\n\t}\n\n\t// if updating\n\tif (isUpdate) {\n\t\tcomponent.props = previousProps;\n\t\tcomponent.state = previousState;\n\t\tcomponent.context = previousContext;\n\t\tif (renderMode!==FORCE_RENDER\n\t\t\t&& component.shouldComponentUpdate\n\t\t\t&& component.shouldComponentUpdate(props, state, context) === false) {\n\t\t\tskip = true;\n\t\t}\n\t\telse if (component.componentWillUpdate) {\n\t\t\tcomponent.componentWillUpdate(props, state, context);\n\t\t}\n\t\tcomponent.props = props;\n\t\tcomponent.state = state;\n\t\tcomponent.context = context;\n\t}\n\n\tcomponent.prevProps = component.prevState = component.prevContext = component.nextBase = null;\n\tcomponent._dirty = false;\n\n\tif (!skip) {\n\t\trendered = component.render(props, state, context);\n\n\t\t// context to pass to the child, can be updated via (grand-)parent component\n\t\tif (component.getChildContext) {\n\t\t\tcontext = extend(extend({}, context), component.getChildContext());\n\t\t}\n\n\t\tif (isUpdate && component.getSnapshotBeforeUpdate) {\n\t\t\tsnapshot = component.getSnapshotBeforeUpdate(previousProps, previousState);\n\t\t}\n\n\t\tlet childComponent = rendered && rendered.nodeName,\n\t\t\ttoUnmount, base;\n\n\t\tif (typeof childComponent==='function') {\n\t\t\t// set up high order component link\n\n\t\t\tlet childProps = getNodeProps(rendered);\n\t\t\tinst = initialChildComponent;\n\n\t\t\tif (inst && inst.constructor===childComponent && childProps.key==inst.__key) {\n\t\t\t\tsetComponentProps(inst, childProps, SYNC_RENDER, context, false);\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttoUnmount = inst;\n\n\t\t\t\tcomponent._component = inst = createComponent(childComponent, childProps, context);\n\t\t\t\tinst.nextBase = inst.nextBase || nextBase;\n\t\t\t\tinst._parentComponent = component;\n\t\t\t\tsetComponentProps(inst, childProps, NO_RENDER, context, false);\n\t\t\t\trenderComponent(inst, SYNC_RENDER, mountAll, true);\n\t\t\t}\n\n\t\t\tbase = inst.base;\n\t\t}\n\t\telse {\n\t\t\tcbase = initialBase;\n\n\t\t\t// destroy high order component link\n\t\t\ttoUnmount = initialChildComponent;\n\t\t\tif (toUnmount) {\n\t\t\t\tcbase = component._component = null;\n\t\t\t}\n\n\t\t\tif (initialBase || renderMode===SYNC_RENDER) {\n\t\t\t\tif (cbase) cbase._component = null;\n\t\t\t\tbase = diff(cbase, rendered, context, mountAll || !isUpdate, initialBase && initialBase.parentNode, true);\n\t\t\t}\n\t\t}\n\n\t\tif (initialBase && base!==initialBase && inst!==initialChildComponent) {\n\t\t\tlet baseParent = initialBase.parentNode;\n\t\t\tif (baseParent && base!==baseParent) {\n\t\t\t\tbaseParent.replaceChild(base, initialBase);\n\n\t\t\t\tif (!toUnmount) {\n\t\t\t\t\tinitialBase._component = null;\n\t\t\t\t\trecollectNodeTree(initialBase, false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (toUnmount) {\n\t\t\tunmountComponent(toUnmount);\n\t\t}\n\n\t\tcomponent.base = base;\n\t\tif (base && !isChild) {\n\t\t\tlet componentRef = component,\n\t\t\t\tt = component;\n\t\t\twhile ((t=t._parentComponent)) {\n\t\t\t\t(componentRef = t).base = base;\n\t\t\t}\n\t\t\tbase._component = componentRef;\n\t\t\tbase._componentConstructor = componentRef.constructor;\n\t\t}\n\t}\n\n\tif (!isUpdate || mountAll) {\n\t\tmounts.push(component);\n\t}\n\telse if (!skip) {\n\t\t// Ensure that pending componentDidMount() hooks of child components\n\t\t// are called before the componentDidUpdate() hook in the parent.\n\t\t// Note: disabled as it causes duplicate hooks, see https://github.com/developit/preact/issues/750\n\t\t// flushMounts();\n\n\t\tif (component.componentDidUpdate) {\n\t\t\tcomponent.componentDidUpdate(previousProps, previousState, snapshot);\n\t\t}\n\t\tif (options.afterUpdate) options.afterUpdate(component);\n\t}\n\n\twhile (component._renderCallbacks.length) component._renderCallbacks.pop().call(component);\n\n\tif (!diffLevel && !isChild) flushMounts();\n}\n\n\n\n/**\n * Apply the Component referenced by a VNode to the DOM.\n * @param {import('../dom').PreactElement} dom The DOM node to mutate\n * @param {import('../vnode').VNode} vnode A Component-referencing VNode\n * @param {object} context The current context\n * @param {boolean} mountAll Whether or not to immediately mount all components\n * @returns {import('../dom').PreactElement} The created/mutated element\n * @private\n */\nexport function buildComponentFromVNode(dom, vnode, context, mountAll) {\n\tlet c = dom && dom._component,\n\t\toriginalComponent = c,\n\t\toldDom = dom,\n\t\tisDirectOwner = c && dom._componentConstructor===vnode.nodeName,\n\t\tisOwner = isDirectOwner,\n\t\tprops = getNodeProps(vnode);\n\twhile (c && !isOwner && (c=c._parentComponent)) {\n\t\tisOwner = c.constructor===vnode.nodeName;\n\t}\n\n\tif (c && isOwner && (!mountAll || c._component)) {\n\t\tsetComponentProps(c, props, ASYNC_RENDER, context, mountAll);\n\t\tdom = c.base;\n\t}\n\telse {\n\t\tif (originalComponent && !isDirectOwner) {\n\t\t\tunmountComponent(originalComponent);\n\t\t\tdom = oldDom = null;\n\t\t}\n\n\t\tc = createComponent(vnode.nodeName, props, context);\n\t\tif (dom && !c.nextBase) {\n\t\t\tc.nextBase = dom;\n\t\t\t// passing dom/oldDom as nextBase will recycle it if unused, so bypass recycling on L229:\n\t\t\toldDom = null;\n\t\t}\n\t\tsetComponentProps(c, props, SYNC_RENDER, context, mountAll);\n\t\tdom = c.base;\n\n\t\tif (oldDom && dom!==oldDom) {\n\t\t\toldDom._component = null;\n\t\t\trecollectNodeTree(oldDom, false);\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n\n\n/**\n * Remove a component from the DOM and recycle it.\n * @param {import('../component').Component} component The Component instance to unmount\n * @private\n */\nexport function unmountComponent(component) {\n\tif (options.beforeUnmount) options.beforeUnmount(component);\n\n\tlet base = component.base;\n\n\tcomponent._disable = true;\n\n\tif (component.componentWillUnmount) component.componentWillUnmount();\n\n\tcomponent.base = null;\n\n\t// recursively tear down & recollect high-order component children:\n\tlet inner = component._component;\n\tif (inner) {\n\t\tunmountComponent(inner);\n\t}\n\telse if (base) {\n\t\tif (base[ATTR_KEY]!=null) applyRef(base[ATTR_KEY].ref, null);\n\n\t\tcomponent.nextBase = base;\n\n\t\tremoveNode(base);\n\t\trecyclerComponents.push(component);\n\n\t\tremoveChildren(base);\n\t}\n\n\tapplyRef(component.__ref, null);\n}\n","import { Component } from '../component';\n\n/**\n * Retains a pool of Components for re-use.\n * @type {Component[]}\n * @private\n */\nexport const recyclerComponents = [];\n\n\n/**\n * Create a component. Normalizes differences between PFC's and classful\n * Components.\n * @param {function} Ctor The constructor of the component to create\n * @param {object} props The initial props of the component\n * @param {object} context The initial context of the component\n * @returns {import('../component').Component}\n */\nexport function createComponent(Ctor, props, context) {\n\tlet inst, i = recyclerComponents.length;\n\n\tif (Ctor.prototype && Ctor.prototype.render) {\n\t\tinst = new Ctor(props, context);\n\t\tComponent.call(inst, props, context);\n\t}\n\telse {\n\t\tinst = new Component(props, context);\n\t\tinst.constructor = Ctor;\n\t\tinst.render = doRender;\n\t}\n\n\n\twhile (i--) {\n\t\tif (recyclerComponents[i].constructor===Ctor) {\n\t\t\tinst.nextBase = recyclerComponents[i].nextBase;\n\t\t\trecyclerComponents.splice(i, 1);\n\t\t\treturn inst;\n\t\t}\n\t}\n\n\treturn inst;\n}\n\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n","import { FORCE_RENDER } from './constants';\nimport { extend } from './util';\nimport { renderComponent } from './vdom/component';\nimport { enqueueRender } from './render-queue';\n/**\n * Base Component class.\n * Provides `setState()` and `forceUpdate()`, which trigger rendering.\n * @typedef {object} Component\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components' getChildContext\n * @public\n *\n * @example\n * class MyFoo extends Component {\n *   render(props, state) {\n *     return <div />;\n *   }\n * }\n */\nexport function Component(props, context) {\n\tthis._dirty = true;\n\n\t/**\n\t * @public\n\t * @type {object}\n\t */\n\tthis.context = context;\n\n\t/**\n\t * @public\n\t * @type {object}\n\t */\n\tthis.props = props;\n\n\t/**\n\t * @public\n\t * @type {object}\n\t */\n\tthis.state = this.state || {};\n\n\tthis._renderCallbacks = [];\n}\n\n\nextend(Component.prototype, {\n\n\t/**\n\t * Update component state and schedule a re-render.\n\t * @param {object} state A dict of state properties to be shallowly merged\n\t * \tinto the current state, or a function that will produce such a dict. The\n\t * \tfunction is called with the current state and props.\n\t * @param {() => void} callback A function to be called once component state is\n\t * \tupdated\n\t */\n\tsetState(state, callback) {\n\t\tif (!this.prevState) this.prevState = this.state;\n\t\tthis.state = extend(\n\t\t\textend({}, this.state),\n\t\t\ttypeof state === 'function' ? state(this.state, this.props) : state\n\t\t);\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t},\n\n\n\t/**\n\t * Immediately perform a synchronous re-render of the component.\n\t * @param {() => void} callback A function to be called after component is\n\t * \tre-rendered.\n\t * @private\n\t */\n\tforceUpdate(callback) {\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\trenderComponent(this, FORCE_RENDER);\n\t},\n\n\n\t/**\n\t * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n\t * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n\t * @param {object} props Props (eg: JSX attributes) received from parent\n\t * \telement/component\n\t * @param {object} state The component's current state\n\t * @param {object} context Context object, as returned by the nearest\n\t *  ancestor's `getChildContext()`\n\t * @returns {import('./vnode').VNode | void}\n\t */\n\trender() {}\n\n});\n"],"sourceRoot":""}