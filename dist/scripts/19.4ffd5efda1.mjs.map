{"version":3,"sources":["webpack:///./node_modules/scrollama/build/scrollama.js","webpack:///./node_modules/intersection-observer/intersection-observer.js"],"names":["module","exports","getOffsetId","id","setup","ref","offsetVal","stepClass","el","document","createElement","className","style","position","left","width","height","borderTop","zIndex","p","innerHTML","fontSize","fontFamily","color","margin","padding","appendChild","body","setupOffset","stepEl","notifyStep","index","state","prefix","elA","getElementById","elB","display","OBSERVER_NAMES","cb","io","stepOffsetHeight","stepOffsetTop","stepStates","offsetMargin","viewH","pageH","previousYOffset","progressThreshold","isReady","isEnabled","isDebug","progressMode","preserveOrder","triggerOnce","direction","format","exclude","err","msg","console","error","reset","stepEnter","stepExit","stepProgress","getOffsetTop","getBoundingClientRect","top","window","pageYOffset","clientTop","getIndex","element","getAttribute","updateDirection","disconnectObserver","name","forEach","d","disconnect","handleResize","html","innerHeight","documentElement","Math","max","scrollHeight","offsetHeight","clientHeight","map","updateIO","post","idVal","querySelector","innerText","update","handleEnable","enable","notifyStepProgress","progress","undefined","resp","notifyOthers","location","i","ss","notifyStepEnter","notifyStepExit","i$1","length","ss$1","dir","check","intersectStepAbove","entry","isIntersecting","boundingClientRect","target","bottom","topAdjusted","bottomAdjusted","intersectStepBelow","intersectViewportAbove","intersectViewportBelow","intersectStepProgress","intersectionRatio","updateStepProgressIO","rootMargin","threshold","count","ceil","t","ratio","push","createThreshold","obs","IntersectionObserver","observe","viewportAbove","marginTop","marginBottom","viewportBelow","stepAbove","stepBelow","anyScrollableParent","nodeType","getComputedStyle","overflowY","isYScrollable","parentNode","S","step","offset","debug","order","a","l","selector","parent","once","Date","now","floor","random","join","Array","from","querySelectorAll","Element","NodeList","scrollableParent","reduce","foundScrollable","s","offsetTrigger","setAttribute","x","min","indexOf","v","replace","isNaN","f","factory","IntersectionObserverEntry","prototype","Object","defineProperty","get","this","registry","THROTTLE_TIMEOUT","POLL_INTERVAL","USE_MUTATION_OBSERVER","_observationTargets","some","item","Error","_registerInstance","_monitorIntersections","_checkForIntersections","unobserve","filter","_unmonitorIntersections","_unregisterInstance","takeRecords","records","_queuedEntries","slice","_initThresholds","opt_threshold","isArray","sort","_parseRootMargin","opt_rootMargin","margins","split","parts","exec","value","parseFloat","unit","_monitoringIntersections","_monitoringInterval","setInterval","addEvent","_domObserver","MutationObserver","attributes","childList","characterData","subtree","clearInterval","removeEvent","rootIsInDom","_rootIsInDom","rootRect","_getRootRect","right","targetRect","rootContainsTarget","_rootContainsTarget","oldEntry","intersectionRect","_computeTargetAndRootIntersection","newEntry","time","performance","rootBounds","_hasCrossedThreshold","_callback","rect1","rect2","getParentNode","atRoot","parentRect","parentComputedStyle","root","overflow","clientWidth","_expandRectByRootMargin","rect","_rootMarginValues","newRect","oldRatio","newRatio","thresholds","containsDeep","splice","targetArea","intersectionArea","Number","toFixed","callback","opt_options","fn","timeout","timer","options","bind","setTimeout","node","event","opt_useCapture","addEventListener","attachEvent","removeEventListener","detatchEvent","child","host"],"mappings":"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","file":"19.4ffd5efda1.mjs","sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.scrollama = factory());\n}(this, (function () { 'use strict';\n\n// DOM helper functions\n\n// public\nfunction selectAll(selector, parent) {\n  if ( parent === void 0 ) parent = document;\n\n  if (typeof selector === 'string') {\n    return Array.from(parent.querySelectorAll(selector));\n  } else if (selector instanceof Element) {\n    return [selector];\n  } else if (selector instanceof NodeList) {\n    return Array.from(selector);\n  } else if (selector instanceof Array) {\n    return selector;\n  }\n  return [];\n}\n\nfunction getOffsetId(id) {\n  return (\"scrollama__debug-offset--\" + id);\n}\n\n// SETUP\nfunction setupOffset(ref) {\n  var id = ref.id;\n  var offsetVal = ref.offsetVal;\n  var stepClass = ref.stepClass;\n\n  var el = document.createElement(\"div\");\n  el.id = getOffsetId(id);\n  el.className = \"scrollama__debug-offset\";\n  el.style.position = \"fixed\";\n  el.style.left = \"0\";\n  el.style.width = \"100%\";\n  el.style.height = \"0\";\n  el.style.borderTop = \"2px dashed black\";\n  el.style.zIndex = \"9999\";\n\n  var p = document.createElement(\"p\");\n  p.innerHTML = \"\\\".\" + stepClass + \"\\\" trigger: <span>\" + offsetVal + \"</span>\";\n  p.style.fontSize = \"12px\";\n  p.style.fontFamily = \"monospace\";\n  p.style.color = \"black\";\n  p.style.margin = \"0\";\n  p.style.padding = \"6px\";\n  el.appendChild(p);\n  document.body.appendChild(el);\n}\n\nfunction setup(ref) {\n  var id = ref.id;\n  var offsetVal = ref.offsetVal;\n  var stepEl = ref.stepEl;\n\n  var stepClass = stepEl[0].className;\n  setupOffset({ id: id, offsetVal: offsetVal, stepClass: stepClass });\n}\n\n// UPDATE\nfunction update(ref) {\n  var id = ref.id;\n  var offsetMargin = ref.offsetMargin;\n  var offsetVal = ref.offsetVal;\n  var format = ref.format;\n\n  var post = format === \"pixels\" ? \"px\" : \"\";\n  var idVal = getOffsetId(id);\n  var el = document.getElementById(idVal);\n  el.style.top = offsetMargin + \"px\";\n  el.querySelector(\"span\").innerText = \"\" + offsetVal + post;\n}\n\nfunction notifyStep(ref) {\n  var id = ref.id;\n  var index = ref.index;\n  var state = ref.state;\n\n  var prefix = \"scrollama__debug-step--\" + id + \"-\" + index;\n  var elA = document.getElementById((prefix + \"_above\"));\n  var elB = document.getElementById((prefix + \"_below\"));\n  var display = state === \"enter\" ? \"block\" : \"none\";\n\n  if (elA) { elA.style.display = display; }\n  if (elB) { elB.style.display = display; }\n}\n\nfunction scrollama() {\n  var OBSERVER_NAMES = [\n    \"stepAbove\",\n    \"stepBelow\",\n    \"stepProgress\",\n    \"viewportAbove\",\n    \"viewportBelow\"\n  ];\n\n  var cb = {};\n  var io = {};\n\n  var id = null;\n  var stepEl = [];\n  var stepOffsetHeight = [];\n  var stepOffsetTop = [];\n  var stepStates = [];\n\n  var offsetVal = 0;\n  var offsetMargin = 0;\n  var viewH = 0;\n  var pageH = 0;\n  var previousYOffset = 0;\n  var progressThreshold = 0;\n\n  var isReady = false;\n  var isEnabled = false;\n  var isDebug = false;\n\n  var progressMode = false;\n  var preserveOrder = false;\n  var triggerOnce = false;\n\n  var direction = \"down\";\n  var format = \"percent\";\n\n  var exclude = [];\n\n  /* HELPERS */\n  function err(msg) {\n    console.error((\"scrollama error: \" + msg));\n  }\n\n  function reset() {\n    cb = {\n      stepEnter: function () {},\n      stepExit: function () {},\n      stepProgress: function () {}\n    };\n    io = {};\n  }\n\n  function generateInstanceID() {\n    var a = \"abcdefghijklmnopqrstuv\";\n    var l = a.length;\n    var t = Date.now();\n    var r = [0, 0, 0].map(function (d) { return a[Math.floor(Math.random() * l)]; }).join(\"\");\n    return (\"\" + r + t);\n  }\n\n  function getOffsetTop(el) {\n    var ref = el.getBoundingClientRect();\n    var top = ref.top;\n    var scrollTop = window.pageYOffset;\n    var clientTop = document.body.clientTop || 0;\n    return top + scrollTop - clientTop;\n  }\n\n  function getPageHeight() {\n    var body = document.body;\n    var html = document.documentElement;\n\n    return Math.max(\n      body.scrollHeight,\n      body.offsetHeight,\n      html.clientHeight,\n      html.scrollHeight,\n      html.offsetHeight\n    );\n  }\n\n  function getIndex(element) {\n    return +element.getAttribute(\"data-scrollama-index\");\n  }\n\n  function updateDirection() {\n    if (window.pageYOffset > previousYOffset) { direction = \"down\"; }\n    else if (window.pageYOffset < previousYOffset) { direction = \"up\"; }\n    previousYOffset = window.pageYOffset;\n  }\n\n  function disconnectObserver(name) {\n    if (io[name]) { io[name].forEach(function (d) { return d.disconnect(); }); }\n  }\n\n  function handleResize() {\n    viewH = window.innerHeight;\n    pageH = getPageHeight();\n\n    var mult = format === \"pixels\" ? 1 : viewH;\n    offsetMargin = offsetVal * mult;\n\n    if (isReady) {\n      stepOffsetHeight = stepEl.map(function (el) { return el.getBoundingClientRect().height; });\n      stepOffsetTop = stepEl.map(getOffsetTop);\n      if (isEnabled) { updateIO(); }\n    }\n\n    if (isDebug) { update({ id: id, offsetMargin: offsetMargin, offsetVal: offsetVal, format: format }); }\n  }\n\n  function handleEnable(enable) {\n    if (enable && !isEnabled) {\n      // enable a disabled scroller\n      if (isReady) {\n        // enable a ready scroller\n        updateIO();\n      } else {\n        // can't enable an unready scroller\n        err(\"scrollama error: enable() called before scroller was ready\");\n        isEnabled = false;\n        return; // all is not well, don't set the requested state\n      }\n    }\n    if (!enable && isEnabled) {\n      // disable an enabled scroller\n      OBSERVER_NAMES.forEach(disconnectObserver);\n    }\n    isEnabled = enable; // all is well, set requested state\n  }\n\n  function createThreshold(height) {\n    var count = Math.ceil(height / progressThreshold);\n    var t = [];\n    var ratio = 1 / count;\n    for (var i = 0; i < count; i += 1) {\n      t.push(i * ratio);\n    }\n    return t;\n  }\n\n  /* NOTIFY CALLBACKS */\n  function notifyStepProgress(element, progress) {\n    var index = getIndex(element);\n    if (progress !== undefined) { stepStates[index].progress = progress; }\n    var resp = { element: element, index: index, progress: stepStates[index].progress };\n\n    if (stepStates[index].state === \"enter\") { cb.stepProgress(resp); }\n  }\n\n  function notifyOthers(index, location) {\n    if (location === \"above\") {\n      // check if steps above/below were skipped and should be notified first\n      for (var i = 0; i < index; i += 1) {\n        var ss = stepStates[i];\n        if (ss.state !== \"enter\" && ss.direction !== \"down\") {\n          notifyStepEnter(stepEl[i], \"down\", false);\n          notifyStepExit(stepEl[i], \"down\");\n        } else if (ss.state === \"enter\") { notifyStepExit(stepEl[i], \"down\"); }\n        // else if (ss.direction === 'up') {\n        //   notifyStepEnter(stepEl[i], 'down', false);\n        //   notifyStepExit(stepEl[i], 'down');\n        // }\n      }\n    } else if (location === \"below\") {\n      for (var i$1 = stepStates.length - 1; i$1 > index; i$1 -= 1) {\n        var ss$1 = stepStates[i$1];\n        if (ss$1.state === \"enter\") {\n          notifyStepExit(stepEl[i$1], \"up\");\n        }\n        if (ss$1.direction === \"down\") {\n          notifyStepEnter(stepEl[i$1], \"up\", false);\n          notifyStepExit(stepEl[i$1], \"up\");\n        }\n      }\n    }\n  }\n\n  function notifyStepEnter(element, dir, check) {\n    if ( check === void 0 ) check = true;\n\n    var index = getIndex(element);\n    var resp = { element: element, index: index, direction: dir };\n\n    // store most recent trigger\n    stepStates[index].direction = dir;\n    stepStates[index].state = \"enter\";\n    if (preserveOrder && check && dir === \"down\") { notifyOthers(index, \"above\"); }\n\n    if (preserveOrder && check && dir === \"up\") { notifyOthers(index, \"below\"); }\n\n    if (cb.stepEnter && !exclude[index]) {\n      cb.stepEnter(resp, stepStates);\n      if (isDebug) { notifyStep({ id: id, index: index, state: \"enter\" }); }\n      if (triggerOnce) { exclude[index] = true; }\n    }\n\n    if (progressMode) { notifyStepProgress(element); }\n  }\n\n  function notifyStepExit(element, dir) {\n    var index = getIndex(element);\n    var resp = { element: element, index: index, direction: dir };\n\n    if (progressMode) {\n      if (dir === \"down\" && stepStates[index].progress < 1)\n        { notifyStepProgress(element, 1); }\n      else if (dir === \"up\" && stepStates[index].progress > 0)\n        { notifyStepProgress(element, 0); }\n    }\n\n    // store most recent trigger\n    stepStates[index].direction = dir;\n    stepStates[index].state = \"exit\";\n\n    cb.stepExit(resp, stepStates);\n    if (isDebug) { notifyStep({ id: id, index: index, state: \"exit\" }); }\n  }\n\n  /* OBSERVER - INTERSECT HANDLING */\n  // this is good for entering while scrolling down + leaving while scrolling up\n  function intersectStepAbove(ref) {\n    var entry = ref[0];\n\n    updateDirection();\n    var isIntersecting = entry.isIntersecting;\n    var boundingClientRect = entry.boundingClientRect;\n    var target = entry.target;\n\n    // bottom = bottom edge of element from top of viewport\n    // bottomAdjusted = bottom edge of element from trigger\n    var top = boundingClientRect.top;\n    var bottom = boundingClientRect.bottom;\n    var topAdjusted = top - offsetMargin;\n    var bottomAdjusted = bottom - offsetMargin;\n    var index = getIndex(target);\n    var ss = stepStates[index];\n\n    // entering above is only when topAdjusted is negative\n    // and bottomAdjusted is positive\n    if (\n      isIntersecting &&\n      topAdjusted <= 0 &&\n      bottomAdjusted >= 0 &&\n      direction === \"down\" &&\n      ss.state !== \"enter\"\n    )\n      { notifyStepEnter(target, direction); }\n\n    // exiting from above is when topAdjusted is positive and not intersecting\n    if (\n      !isIntersecting &&\n      topAdjusted > 0 &&\n      direction === \"up\" &&\n      ss.state === \"enter\"\n    )\n      { notifyStepExit(target, direction); }\n  }\n\n  // this is good for entering while scrolling up + leaving while scrolling down\n  function intersectStepBelow(ref) {\n    var entry = ref[0];\n\n    updateDirection();\n    var isIntersecting = entry.isIntersecting;\n    var boundingClientRect = entry.boundingClientRect;\n    var target = entry.target;\n\n    // bottom = bottom edge of element from top of viewport\n    // bottomAdjusted = bottom edge of element from trigger\n    var top = boundingClientRect.top;\n    var bottom = boundingClientRect.bottom;\n    var topAdjusted = top - offsetMargin;\n    var bottomAdjusted = bottom - offsetMargin;\n    var index = getIndex(target);\n    var ss = stepStates[index];\n\n    // entering below is only when bottomAdjusted is positive\n    // and topAdjusted is negative\n    if (\n      isIntersecting &&\n      topAdjusted <= 0 &&\n      bottomAdjusted >= 0 &&\n      direction === \"up\" &&\n      ss.state !== \"enter\"\n    )\n      { notifyStepEnter(target, direction); }\n\n    // exiting from above is when bottomAdjusted is negative and not intersecting\n    if (\n      !isIntersecting &&\n      bottomAdjusted < 0 &&\n      direction === \"down\" &&\n      ss.state === \"enter\"\n    )\n      { notifyStepExit(target, direction); }\n  }\n\n  /*\n\tif there is a scroll event where a step never intersects (therefore\n\tskipping an enter/exit trigger), use this fallback to detect if it is\n\tin view\n\t*/\n  function intersectViewportAbove(ref) {\n    var entry = ref[0];\n\n    updateDirection();\n    var isIntersecting = entry.isIntersecting;\n    var target = entry.target;\n    var index = getIndex(target);\n    var ss = stepStates[index];\n\n    if (\n      isIntersecting &&\n      direction === \"down\" &&\n      ss.direction !== \"down\" &&\n      ss.state !== \"enter\"\n    ) {\n      notifyStepEnter(target, \"down\");\n      notifyStepExit(target, \"down\");\n    }\n  }\n\n  function intersectViewportBelow(ref) {\n    var entry = ref[0];\n\n    updateDirection();\n    var isIntersecting = entry.isIntersecting;\n    var target = entry.target;\n    var index = getIndex(target);\n    var ss = stepStates[index];\n    if (\n      isIntersecting &&\n      direction === \"up\" &&\n      ss.direction === \"down\" &&\n      ss.state !== \"enter\"\n    ) {\n      notifyStepEnter(target, \"up\");\n      notifyStepExit(target, \"up\");\n    }\n  }\n\n  function intersectStepProgress(ref) {\n    var entry = ref[0];\n\n    updateDirection();\n    var isIntersecting = entry.isIntersecting;\n    var intersectionRatio = entry.intersectionRatio;\n    var boundingClientRect = entry.boundingClientRect;\n    var target = entry.target;\n    var bottom = boundingClientRect.bottom;\n    var bottomAdjusted = bottom - offsetMargin;\n    if (isIntersecting && bottomAdjusted >= 0) {\n      notifyStepProgress(target, +intersectionRatio);\n    }\n  }\n\n  /*  OBSERVER - CREATION */\n  // jump into viewport\n  function updateViewportAboveIO() {\n    io.viewportAbove = stepEl.map(function (el, i) {\n      var marginTop = pageH - stepOffsetTop[i];\n      var marginBottom = offsetMargin - viewH - stepOffsetHeight[i];\n      var rootMargin = marginTop + \"px 0px \" + marginBottom + \"px 0px\";\n      var options = { rootMargin: rootMargin };\n      // console.log(options);\n      var obs = new IntersectionObserver(intersectViewportAbove, options);\n      obs.observe(el);\n      return obs;\n    });\n  }\n\n  function updateViewportBelowIO() {\n    io.viewportBelow = stepEl.map(function (el, i) {\n      var marginTop = -offsetMargin - stepOffsetHeight[i];\n      var marginBottom = offsetMargin - viewH + stepOffsetHeight[i] + pageH;\n      var rootMargin = marginTop + \"px 0px \" + marginBottom + \"px 0px\";\n      var options = { rootMargin: rootMargin };\n      // console.log(options);\n      var obs = new IntersectionObserver(intersectViewportBelow, options);\n      obs.observe(el);\n      return obs;\n    });\n  }\n\n  // look above for intersection\n  function updateStepAboveIO() {\n    io.stepAbove = stepEl.map(function (el, i) {\n      var marginTop = -offsetMargin + stepOffsetHeight[i];\n      var marginBottom = offsetMargin - viewH;\n      var rootMargin = marginTop + \"px 0px \" + marginBottom + \"px 0px\";\n      var options = { rootMargin: rootMargin };\n      // console.log(options);\n      var obs = new IntersectionObserver(intersectStepAbove, options);\n      obs.observe(el);\n      return obs;\n    });\n  }\n\n  // look below for intersection\n  function updateStepBelowIO() {\n    io.stepBelow = stepEl.map(function (el, i) {\n      var marginTop = -offsetMargin;\n      var marginBottom = offsetMargin - viewH + stepOffsetHeight[i];\n      var rootMargin = marginTop + \"px 0px \" + marginBottom + \"px 0px\";\n      var options = { rootMargin: rootMargin };\n      // console.log(options);\n      var obs = new IntersectionObserver(intersectStepBelow, options);\n      obs.observe(el);\n      return obs;\n    });\n  }\n\n  // progress progress tracker\n  function updateStepProgressIO() {\n    io.stepProgress = stepEl.map(function (el, i) {\n      var marginTop = stepOffsetHeight[i] - offsetMargin;\n      var marginBottom = -viewH + offsetMargin;\n      var rootMargin = marginTop + \"px 0px \" + marginBottom + \"px 0px\";\n      var threshold = createThreshold(stepOffsetHeight[i]);\n      var options = { rootMargin: rootMargin, threshold: threshold };\n      // console.log(options);\n      var obs = new IntersectionObserver(intersectStepProgress, options);\n      obs.observe(el);\n      return obs;\n    });\n  }\n\n  function updateIO() {\n    OBSERVER_NAMES.forEach(disconnectObserver);\n\n    updateViewportAboveIO();\n    updateViewportBelowIO();\n    updateStepAboveIO();\n    updateStepBelowIO();\n\n    if (progressMode) { updateStepProgressIO(); }\n  }\n\n  /* SETUP FUNCTIONS */\n\n  function indexSteps() {\n    stepEl.forEach(function (el, i) { return el.setAttribute(\"data-scrollama-index\", i); });\n  }\n\n  function setupStates() {\n    stepStates = stepEl.map(function () { return ({\n      direction: null,\n      state: null,\n      progress: 0\n    }); });\n  }\n\n  function addDebug() {\n    if (isDebug) { setup({ id: id, stepEl: stepEl, offsetVal: offsetVal }); }\n  }\n\n  function isYScrollable(element) {\n    var style = window.getComputedStyle(element);\n    return (\n      (style.overflowY === \"scroll\" || style.overflowY === \"auto\") &&\n      element.scrollHeight > element.clientHeight\n    );\n  }\n\n  // recursively search the DOM for a parent container with overflowY: scroll and fixed height\n  // ends at document\n  function anyScrollableParent(element) {\n    if (element && element.nodeType === 1) {\n      // check dom elements only, stop at document\n      // if a scrollable element is found return the element\n      // if not continue to next parent\n      return isYScrollable(element)\n        ? element\n        : anyScrollableParent(element.parentNode);\n    }\n    return false; // didn't find a scrollable parent\n  }\n\n  var S = {};\n\n  S.setup = function (ref) {\n    var step = ref.step;\n    var offset = ref.offset; if ( offset === void 0 ) offset = 0.5;\n    var progress = ref.progress; if ( progress === void 0 ) progress = false;\n    var threshold = ref.threshold; if ( threshold === void 0 ) threshold = 4;\n    var debug = ref.debug; if ( debug === void 0 ) debug = false;\n    var order = ref.order; if ( order === void 0 ) order = true;\n    var once = ref.once; if ( once === void 0 ) once = false;\n\n    reset();\n    // create id unique to this scrollama instance\n    id = generateInstanceID();\n\n    stepEl = selectAll(step);\n\n    if (!stepEl.length) {\n      err(\"no step elements\");\n      return S;\n    }\n\n    // ensure that no step has a scrollable parent element in the dom tree\n    // check current step for scrollable parent\n    // assume no scrollable parents to start\n    var scrollableParent = stepEl.reduce(\n      function (foundScrollable, s) { return foundScrollable || anyScrollableParent(s.parentNode); },\n      false\n    );\n    if (scrollableParent) {\n      console.error(\n        \"scrollama error: step elements cannot be children of a scrollable element. Remove any css on the parent element with overflow: scroll; or overflow: auto; on elements with fixed height.\",\n        scrollableParent\n      );\n    }\n\n    // options\n    isDebug = debug;\n    progressMode = progress;\n    preserveOrder = order;\n    triggerOnce = once;\n\n    S.offsetTrigger(offset);\n    progressThreshold = Math.max(1, +threshold);\n\n    isReady = true;\n\n    // customize\n    addDebug();\n    indexSteps();\n    setupStates();\n    handleResize();\n    S.enable();\n    return S;\n  };\n\n  S.resize = function () {\n    handleResize();\n    return S;\n  };\n\n  S.enable = function () {\n    handleEnable(true);\n    return S;\n  };\n\n  S.disable = function () {\n    handleEnable(false);\n    return S;\n  };\n\n  S.destroy = function () {\n    handleEnable(false);\n    reset();\n  };\n\n  S.offsetTrigger = function (x) {\n    if (x === null) { return offsetVal; }\n\n    if (typeof x === \"number\") {\n      format = \"percent\";\n      if (x > 1) { err(\"offset value is greater than 1. Fallback to 1.\"); }\n      if (x < 0) { err(\"offset value is lower than 0. Fallback to 0.\"); }\n      offsetVal = Math.min(Math.max(0, x), 1);\n    } else if (typeof x === \"string\" && x.indexOf(\"px\") > 0) {\n      var v = +x.replace(\"px\", \"\");\n      if (!isNaN(v)) {\n        format = \"pixels\";\n        offsetVal = v;\n      } else {\n        err(\"offset value must be in 'px' format. Fallback to 0.5.\");\n        offsetVal = 0.5;\n      }\n    } else {\n      err(\"offset value does not include 'px'. Fallback to 0.5.\");\n      offsetVal = 0.5;\n    }\n    return S;\n  };\n\n  S.onStepEnter = function (f) {\n    if (typeof f === \"function\") { cb.stepEnter = f; }\n    else { err(\"onStepEnter requires a function\"); }\n    return S;\n  };\n\n  S.onStepExit = function (f) {\n    if (typeof f === \"function\") { cb.stepExit = f; }\n    else { err(\"onStepExit requires a function\"); }\n    return S;\n  };\n\n  S.onStepProgress = function (f) {\n    if (typeof f === \"function\") { cb.stepProgress = f; }\n    else { err(\"onStepProgress requires a function\"); }\n    return S;\n  };\n\n  return S;\n}\n\nreturn scrollama;\n\n})));\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the W3C SOFTWARE AND DOCUMENT NOTICE AND LICENSE.\n *\n *  https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n *\n */\n\n(function(window, document) {\n'use strict';\n\n\n// Exits early if all IntersectionObserver and IntersectionObserverEntry\n// features are natively supported.\nif ('IntersectionObserver' in window &&\n    'IntersectionObserverEntry' in window &&\n    'intersectionRatio' in window.IntersectionObserverEntry.prototype) {\n\n  // Minimal polyfill for Edge 15's lack of `isIntersecting`\n  // See: https://github.com/w3c/IntersectionObserver/issues/211\n  if (!('isIntersecting' in window.IntersectionObserverEntry.prototype)) {\n    Object.defineProperty(window.IntersectionObserverEntry.prototype,\n      'isIntersecting', {\n      get: function () {\n        return this.intersectionRatio > 0;\n      }\n    });\n  }\n  return;\n}\n\n\n/**\n * An IntersectionObserver registry. This registry exists to hold a strong\n * reference to IntersectionObserver instances currently observing a target\n * element. Without this registry, instances without another reference may be\n * garbage collected.\n */\nvar registry = [];\n\n\n/**\n * Creates the global IntersectionObserverEntry constructor.\n * https://w3c.github.io/IntersectionObserver/#intersection-observer-entry\n * @param {Object} entry A dictionary of instance properties.\n * @constructor\n */\nfunction IntersectionObserverEntry(entry) {\n  this.time = entry.time;\n  this.target = entry.target;\n  this.rootBounds = entry.rootBounds;\n  this.boundingClientRect = entry.boundingClientRect;\n  this.intersectionRect = entry.intersectionRect || getEmptyRect();\n  this.isIntersecting = !!entry.intersectionRect;\n\n  // Calculates the intersection ratio.\n  var targetRect = this.boundingClientRect;\n  var targetArea = targetRect.width * targetRect.height;\n  var intersectionRect = this.intersectionRect;\n  var intersectionArea = intersectionRect.width * intersectionRect.height;\n\n  // Sets intersection ratio.\n  if (targetArea) {\n    // Round the intersection ratio to avoid floating point math issues:\n    // https://github.com/w3c/IntersectionObserver/issues/324\n    this.intersectionRatio = Number((intersectionArea / targetArea).toFixed(4));\n  } else {\n    // If area is zero and is intersecting, sets to 1, otherwise to 0\n    this.intersectionRatio = this.isIntersecting ? 1 : 0;\n  }\n}\n\n\n/**\n * Creates the global IntersectionObserver constructor.\n * https://w3c.github.io/IntersectionObserver/#intersection-observer-interface\n * @param {Function} callback The function to be invoked after intersection\n *     changes have queued. The function is not invoked if the queue has\n *     been emptied by calling the `takeRecords` method.\n * @param {Object=} opt_options Optional configuration options.\n * @constructor\n */\nfunction IntersectionObserver(callback, opt_options) {\n\n  var options = opt_options || {};\n\n  if (typeof callback != 'function') {\n    throw new Error('callback must be a function');\n  }\n\n  if (options.root && options.root.nodeType != 1) {\n    throw new Error('root must be an Element');\n  }\n\n  // Binds and throttles `this._checkForIntersections`.\n  this._checkForIntersections = throttle(\n      this._checkForIntersections.bind(this), this.THROTTLE_TIMEOUT);\n\n  // Private properties.\n  this._callback = callback;\n  this._observationTargets = [];\n  this._queuedEntries = [];\n  this._rootMarginValues = this._parseRootMargin(options.rootMargin);\n\n  // Public properties.\n  this.thresholds = this._initThresholds(options.threshold);\n  this.root = options.root || null;\n  this.rootMargin = this._rootMarginValues.map(function(margin) {\n    return margin.value + margin.unit;\n  }).join(' ');\n}\n\n\n/**\n * The minimum interval within which the document will be checked for\n * intersection changes.\n */\nIntersectionObserver.prototype.THROTTLE_TIMEOUT = 100;\n\n\n/**\n * The frequency in which the polyfill polls for intersection changes.\n * this can be updated on a per instance basis and must be set prior to\n * calling `observe` on the first target.\n */\nIntersectionObserver.prototype.POLL_INTERVAL = null;\n\n/**\n * Use a mutation observer on the root element\n * to detect intersection changes.\n */\nIntersectionObserver.prototype.USE_MUTATION_OBSERVER = true;\n\n\n/**\n * Starts observing a target element for intersection changes based on\n * the thresholds values.\n * @param {Element} target The DOM element to observe.\n */\nIntersectionObserver.prototype.observe = function(target) {\n  var isTargetAlreadyObserved = this._observationTargets.some(function(item) {\n    return item.element == target;\n  });\n\n  if (isTargetAlreadyObserved) {\n    return;\n  }\n\n  if (!(target && target.nodeType == 1)) {\n    throw new Error('target must be an Element');\n  }\n\n  this._registerInstance();\n  this._observationTargets.push({element: target, entry: null});\n  this._monitorIntersections();\n  this._checkForIntersections();\n};\n\n\n/**\n * Stops observing a target element for intersection changes.\n * @param {Element} target The DOM element to observe.\n */\nIntersectionObserver.prototype.unobserve = function(target) {\n  this._observationTargets =\n      this._observationTargets.filter(function(item) {\n\n    return item.element != target;\n  });\n  if (!this._observationTargets.length) {\n    this._unmonitorIntersections();\n    this._unregisterInstance();\n  }\n};\n\n\n/**\n * Stops observing all target elements for intersection changes.\n */\nIntersectionObserver.prototype.disconnect = function() {\n  this._observationTargets = [];\n  this._unmonitorIntersections();\n  this._unregisterInstance();\n};\n\n\n/**\n * Returns any queue entries that have not yet been reported to the\n * callback and clears the queue. This can be used in conjunction with the\n * callback to obtain the absolute most up-to-date intersection information.\n * @return {Array} The currently queued entries.\n */\nIntersectionObserver.prototype.takeRecords = function() {\n  var records = this._queuedEntries.slice();\n  this._queuedEntries = [];\n  return records;\n};\n\n\n/**\n * Accepts the threshold value from the user configuration object and\n * returns a sorted array of unique threshold values. If a value is not\n * between 0 and 1 and error is thrown.\n * @private\n * @param {Array|number=} opt_threshold An optional threshold value or\n *     a list of threshold values, defaulting to [0].\n * @return {Array} A sorted list of unique and valid threshold values.\n */\nIntersectionObserver.prototype._initThresholds = function(opt_threshold) {\n  var threshold = opt_threshold || [0];\n  if (!Array.isArray(threshold)) threshold = [threshold];\n\n  return threshold.sort().filter(function(t, i, a) {\n    if (typeof t != 'number' || isNaN(t) || t < 0 || t > 1) {\n      throw new Error('threshold must be a number between 0 and 1 inclusively');\n    }\n    return t !== a[i - 1];\n  });\n};\n\n\n/**\n * Accepts the rootMargin value from the user configuration object\n * and returns an array of the four margin values as an object containing\n * the value and unit properties. If any of the values are not properly\n * formatted or use a unit other than px or %, and error is thrown.\n * @private\n * @param {string=} opt_rootMargin An optional rootMargin value,\n *     defaulting to '0px'.\n * @return {Array<Object>} An array of margin objects with the keys\n *     value and unit.\n */\nIntersectionObserver.prototype._parseRootMargin = function(opt_rootMargin) {\n  var marginString = opt_rootMargin || '0px';\n  var margins = marginString.split(/\\s+/).map(function(margin) {\n    var parts = /^(-?\\d*\\.?\\d+)(px|%)$/.exec(margin);\n    if (!parts) {\n      throw new Error('rootMargin must be specified in pixels or percent');\n    }\n    return {value: parseFloat(parts[1]), unit: parts[2]};\n  });\n\n  // Handles shorthand.\n  margins[1] = margins[1] || margins[0];\n  margins[2] = margins[2] || margins[0];\n  margins[3] = margins[3] || margins[1];\n\n  return margins;\n};\n\n\n/**\n * Starts polling for intersection changes if the polling is not already\n * happening, and if the page's visibility state is visible.\n * @private\n */\nIntersectionObserver.prototype._monitorIntersections = function() {\n  if (!this._monitoringIntersections) {\n    this._monitoringIntersections = true;\n\n    // If a poll interval is set, use polling instead of listening to\n    // resize and scroll events or DOM mutations.\n    if (this.POLL_INTERVAL) {\n      this._monitoringInterval = setInterval(\n          this._checkForIntersections, this.POLL_INTERVAL);\n    }\n    else {\n      addEvent(window, 'resize', this._checkForIntersections, true);\n      addEvent(document, 'scroll', this._checkForIntersections, true);\n\n      if (this.USE_MUTATION_OBSERVER && 'MutationObserver' in window) {\n        this._domObserver = new MutationObserver(this._checkForIntersections);\n        this._domObserver.observe(document, {\n          attributes: true,\n          childList: true,\n          characterData: true,\n          subtree: true\n        });\n      }\n    }\n  }\n};\n\n\n/**\n * Stops polling for intersection changes.\n * @private\n */\nIntersectionObserver.prototype._unmonitorIntersections = function() {\n  if (this._monitoringIntersections) {\n    this._monitoringIntersections = false;\n\n    clearInterval(this._monitoringInterval);\n    this._monitoringInterval = null;\n\n    removeEvent(window, 'resize', this._checkForIntersections, true);\n    removeEvent(document, 'scroll', this._checkForIntersections, true);\n\n    if (this._domObserver) {\n      this._domObserver.disconnect();\n      this._domObserver = null;\n    }\n  }\n};\n\n\n/**\n * Scans each observation target for intersection changes and adds them\n * to the internal entries queue. If new entries are found, it\n * schedules the callback to be invoked.\n * @private\n */\nIntersectionObserver.prototype._checkForIntersections = function() {\n  var rootIsInDom = this._rootIsInDom();\n  var rootRect = rootIsInDom ? this._getRootRect() : getEmptyRect();\n\n  this._observationTargets.forEach(function(item) {\n    var target = item.element;\n    var targetRect = getBoundingClientRect(target);\n    var rootContainsTarget = this._rootContainsTarget(target);\n    var oldEntry = item.entry;\n    var intersectionRect = rootIsInDom && rootContainsTarget &&\n        this._computeTargetAndRootIntersection(target, rootRect);\n\n    var newEntry = item.entry = new IntersectionObserverEntry({\n      time: now(),\n      target: target,\n      boundingClientRect: targetRect,\n      rootBounds: rootRect,\n      intersectionRect: intersectionRect\n    });\n\n    if (!oldEntry) {\n      this._queuedEntries.push(newEntry);\n    } else if (rootIsInDom && rootContainsTarget) {\n      // If the new entry intersection ratio has crossed any of the\n      // thresholds, add a new entry.\n      if (this._hasCrossedThreshold(oldEntry, newEntry)) {\n        this._queuedEntries.push(newEntry);\n      }\n    } else {\n      // If the root is not in the DOM or target is not contained within\n      // root but the previous entry for this target had an intersection,\n      // add a new record indicating removal.\n      if (oldEntry && oldEntry.isIntersecting) {\n        this._queuedEntries.push(newEntry);\n      }\n    }\n  }, this);\n\n  if (this._queuedEntries.length) {\n    this._callback(this.takeRecords(), this);\n  }\n};\n\n\n/**\n * Accepts a target and root rect computes the intersection between then\n * following the algorithm in the spec.\n * TODO(philipwalton): at this time clip-path is not considered.\n * https://w3c.github.io/IntersectionObserver/#calculate-intersection-rect-algo\n * @param {Element} target The target DOM element\n * @param {Object} rootRect The bounding rect of the root after being\n *     expanded by the rootMargin value.\n * @return {?Object} The final intersection rect object or undefined if no\n *     intersection is found.\n * @private\n */\nIntersectionObserver.prototype._computeTargetAndRootIntersection =\n    function(target, rootRect) {\n\n  // If the element isn't displayed, an intersection can't happen.\n  if (window.getComputedStyle(target).display == 'none') return;\n\n  var targetRect = getBoundingClientRect(target);\n  var intersectionRect = targetRect;\n  var parent = getParentNode(target);\n  var atRoot = false;\n\n  while (!atRoot) {\n    var parentRect = null;\n    var parentComputedStyle = parent.nodeType == 1 ?\n        window.getComputedStyle(parent) : {};\n\n    // If the parent isn't displayed, an intersection can't happen.\n    if (parentComputedStyle.display == 'none') return;\n\n    if (parent == this.root || parent == document) {\n      atRoot = true;\n      parentRect = rootRect;\n    } else {\n      // If the element has a non-visible overflow, and it's not the <body>\n      // or <html> element, update the intersection rect.\n      // Note: <body> and <html> cannot be clipped to a rect that's not also\n      // the document rect, so no need to compute a new intersection.\n      if (parent != document.body &&\n          parent != document.documentElement &&\n          parentComputedStyle.overflow != 'visible') {\n        parentRect = getBoundingClientRect(parent);\n      }\n    }\n\n    // If either of the above conditionals set a new parentRect,\n    // calculate new intersection data.\n    if (parentRect) {\n      intersectionRect = computeRectIntersection(parentRect, intersectionRect);\n\n      if (!intersectionRect) break;\n    }\n    parent = getParentNode(parent);\n  }\n  return intersectionRect;\n};\n\n\n/**\n * Returns the root rect after being expanded by the rootMargin value.\n * @return {Object} The expanded root rect.\n * @private\n */\nIntersectionObserver.prototype._getRootRect = function() {\n  var rootRect;\n  if (this.root) {\n    rootRect = getBoundingClientRect(this.root);\n  } else {\n    // Use <html>/<body> instead of window since scroll bars affect size.\n    var html = document.documentElement;\n    var body = document.body;\n    rootRect = {\n      top: 0,\n      left: 0,\n      right: html.clientWidth || body.clientWidth,\n      width: html.clientWidth || body.clientWidth,\n      bottom: html.clientHeight || body.clientHeight,\n      height: html.clientHeight || body.clientHeight\n    };\n  }\n  return this._expandRectByRootMargin(rootRect);\n};\n\n\n/**\n * Accepts a rect and expands it by the rootMargin value.\n * @param {Object} rect The rect object to expand.\n * @return {Object} The expanded rect.\n * @private\n */\nIntersectionObserver.prototype._expandRectByRootMargin = function(rect) {\n  var margins = this._rootMarginValues.map(function(margin, i) {\n    return margin.unit == 'px' ? margin.value :\n        margin.value * (i % 2 ? rect.width : rect.height) / 100;\n  });\n  var newRect = {\n    top: rect.top - margins[0],\n    right: rect.right + margins[1],\n    bottom: rect.bottom + margins[2],\n    left: rect.left - margins[3]\n  };\n  newRect.width = newRect.right - newRect.left;\n  newRect.height = newRect.bottom - newRect.top;\n\n  return newRect;\n};\n\n\n/**\n * Accepts an old and new entry and returns true if at least one of the\n * threshold values has been crossed.\n * @param {?IntersectionObserverEntry} oldEntry The previous entry for a\n *    particular target element or null if no previous entry exists.\n * @param {IntersectionObserverEntry} newEntry The current entry for a\n *    particular target element.\n * @return {boolean} Returns true if a any threshold has been crossed.\n * @private\n */\nIntersectionObserver.prototype._hasCrossedThreshold =\n    function(oldEntry, newEntry) {\n\n  // To make comparing easier, an entry that has a ratio of 0\n  // but does not actually intersect is given a value of -1\n  var oldRatio = oldEntry && oldEntry.isIntersecting ?\n      oldEntry.intersectionRatio || 0 : -1;\n  var newRatio = newEntry.isIntersecting ?\n      newEntry.intersectionRatio || 0 : -1;\n\n  // Ignore unchanged ratios\n  if (oldRatio === newRatio) return;\n\n  for (var i = 0; i < this.thresholds.length; i++) {\n    var threshold = this.thresholds[i];\n\n    // Return true if an entry matches a threshold or if the new ratio\n    // and the old ratio are on the opposite sides of a threshold.\n    if (threshold == oldRatio || threshold == newRatio ||\n        threshold < oldRatio !== threshold < newRatio) {\n      return true;\n    }\n  }\n};\n\n\n/**\n * Returns whether or not the root element is an element and is in the DOM.\n * @return {boolean} True if the root element is an element and is in the DOM.\n * @private\n */\nIntersectionObserver.prototype._rootIsInDom = function() {\n  return !this.root || containsDeep(document, this.root);\n};\n\n\n/**\n * Returns whether or not the target element is a child of root.\n * @param {Element} target The target element to check.\n * @return {boolean} True if the target element is a child of root.\n * @private\n */\nIntersectionObserver.prototype._rootContainsTarget = function(target) {\n  return containsDeep(this.root || document, target);\n};\n\n\n/**\n * Adds the instance to the global IntersectionObserver registry if it isn't\n * already present.\n * @private\n */\nIntersectionObserver.prototype._registerInstance = function() {\n  if (registry.indexOf(this) < 0) {\n    registry.push(this);\n  }\n};\n\n\n/**\n * Removes the instance from the global IntersectionObserver registry.\n * @private\n */\nIntersectionObserver.prototype._unregisterInstance = function() {\n  var index = registry.indexOf(this);\n  if (index != -1) registry.splice(index, 1);\n};\n\n\n/**\n * Returns the result of the performance.now() method or null in browsers\n * that don't support the API.\n * @return {number} The elapsed time since the page was requested.\n */\nfunction now() {\n  return window.performance && performance.now && performance.now();\n}\n\n\n/**\n * Throttles a function and delays its execution, so it's only called at most\n * once within a given time period.\n * @param {Function} fn The function to throttle.\n * @param {number} timeout The amount of time that must pass before the\n *     function can be called again.\n * @return {Function} The throttled function.\n */\nfunction throttle(fn, timeout) {\n  var timer = null;\n  return function () {\n    if (!timer) {\n      timer = setTimeout(function() {\n        fn();\n        timer = null;\n      }, timeout);\n    }\n  };\n}\n\n\n/**\n * Adds an event handler to a DOM node ensuring cross-browser compatibility.\n * @param {Node} node The DOM node to add the event handler to.\n * @param {string} event The event name.\n * @param {Function} fn The event handler to add.\n * @param {boolean} opt_useCapture Optionally adds the even to the capture\n *     phase. Note: this only works in modern browsers.\n */\nfunction addEvent(node, event, fn, opt_useCapture) {\n  if (typeof node.addEventListener == 'function') {\n    node.addEventListener(event, fn, opt_useCapture || false);\n  }\n  else if (typeof node.attachEvent == 'function') {\n    node.attachEvent('on' + event, fn);\n  }\n}\n\n\n/**\n * Removes a previously added event handler from a DOM node.\n * @param {Node} node The DOM node to remove the event handler from.\n * @param {string} event The event name.\n * @param {Function} fn The event handler to remove.\n * @param {boolean} opt_useCapture If the event handler was added with this\n *     flag set to true, it should be set to true here in order to remove it.\n */\nfunction removeEvent(node, event, fn, opt_useCapture) {\n  if (typeof node.removeEventListener == 'function') {\n    node.removeEventListener(event, fn, opt_useCapture || false);\n  }\n  else if (typeof node.detatchEvent == 'function') {\n    node.detatchEvent('on' + event, fn);\n  }\n}\n\n\n/**\n * Returns the intersection between two rect objects.\n * @param {Object} rect1 The first rect.\n * @param {Object} rect2 The second rect.\n * @return {?Object} The intersection rect or undefined if no intersection\n *     is found.\n */\nfunction computeRectIntersection(rect1, rect2) {\n  var top = Math.max(rect1.top, rect2.top);\n  var bottom = Math.min(rect1.bottom, rect2.bottom);\n  var left = Math.max(rect1.left, rect2.left);\n  var right = Math.min(rect1.right, rect2.right);\n  var width = right - left;\n  var height = bottom - top;\n\n  return (width >= 0 && height >= 0) && {\n    top: top,\n    bottom: bottom,\n    left: left,\n    right: right,\n    width: width,\n    height: height\n  };\n}\n\n\n/**\n * Shims the native getBoundingClientRect for compatibility with older IE.\n * @param {Element} el The element whose bounding rect to get.\n * @return {Object} The (possibly shimmed) rect of the element.\n */\nfunction getBoundingClientRect(el) {\n  var rect;\n\n  try {\n    rect = el.getBoundingClientRect();\n  } catch (err) {\n    // Ignore Windows 7 IE11 \"Unspecified error\"\n    // https://github.com/w3c/IntersectionObserver/pull/205\n  }\n\n  if (!rect) return getEmptyRect();\n\n  // Older IE\n  if (!(rect.width && rect.height)) {\n    rect = {\n      top: rect.top,\n      right: rect.right,\n      bottom: rect.bottom,\n      left: rect.left,\n      width: rect.right - rect.left,\n      height: rect.bottom - rect.top\n    };\n  }\n  return rect;\n}\n\n\n/**\n * Returns an empty rect object. An empty rect is returned when an element\n * is not in the DOM.\n * @return {Object} The empty rect.\n */\nfunction getEmptyRect() {\n  return {\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    width: 0,\n    height: 0\n  };\n}\n\n/**\n * Checks to see if a parent element contains a child element (including inside\n * shadow DOM).\n * @param {Node} parent The parent element.\n * @param {Node} child The child element.\n * @return {boolean} True if the parent node contains the child node.\n */\nfunction containsDeep(parent, child) {\n  var node = child;\n  while (node) {\n    if (node == parent) return true;\n\n    node = getParentNode(node);\n  }\n  return false;\n}\n\n\n/**\n * Gets the parent node of an element or its host element if the parent node\n * is a shadow root.\n * @param {Node} node The node whose parent to get.\n * @return {Node|null} The parent node or null if no parent exists.\n */\nfunction getParentNode(node) {\n  var parent = node.parentNode;\n\n  if (parent && parent.nodeType == 11 && parent.host) {\n    // If the parent is a shadow root, return the host element.\n    return parent.host;\n  }\n  return parent;\n}\n\n\n// Exposes the constructors globally.\nwindow.IntersectionObserver = IntersectionObserver;\nwindow.IntersectionObserverEntry = IntersectionObserverEntry;\n\n}(window, document));\n"],"sourceRoot":""}